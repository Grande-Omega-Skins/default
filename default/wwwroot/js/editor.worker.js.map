{"version":3,"sources":["webpack://app/webpack/bootstrap","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/base/common/arrays.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/base/common/cancellation.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/base/common/errors.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/base/common/event.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/base/common/functional.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/base/common/iterator.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/base/common/linkedList.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/base/common/platform.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/base/common/strings.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/base/common/types.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/base/common/uri.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/editor/common/core/position.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/editor/common/core/range.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/editor/common/core/token.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/editor/common/core/uint.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/editor/common/standalone/promise-polyfill/polyfill.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js","webpack://app/C:/Users/mabbadi/Documents/Git/GrandeOmega_mk2/node_modules/monaco-editor/esm/vs/editor/editor.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","tail","array","length","tail2","arr","Error","slice","equals","one","other","itemEquals","a","b","len","binarySearch","comparator","low","high","mid","comp","findFirstInSorted","Math","floor","mergeSort","data","compare","_sort","lo","hi","aux","leftIdx","rightIdx","_merge","groupBy","result","currentGroup","undefined","_i","_a","element","push","coalesce","filter","e","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","position","indexOf","seen","elem","firstIndex","fn","first","notFoundValue","index","flatten","concat","apply","range","arg","to","from","arrayInsert","target","insertIndex","insertArr","before","after","__webpack_exports__","CancellationToken","CancellationTokenSource","_event_js__WEBPACK_IMPORTED_MODULE_0__","shortcutEvent","freeze","callback","context","handle","setTimeout","dispose","clearTimeout","isCancellationToken","thing","None","Cancelled","MutableToken","isCancellationRequested","onCancellationRequested","this","_isCancelled","_emitter","cancel","fire","configurable","event","_token","stringDiff","Debug","MyArray","LcsDiff","_diffChange_js__WEBPACK_IMPORTED_MODULE_0__","createStringSequence","getLength","getElementAtIndex","pos","charCodeAt","original","modified","pretty","ComputeDiff","Assert","condition","message","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","DiffChangeHelper","m_changes","m_originalStart","Number","MAX_VALUE","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","min","AddModifiedElement","getChanges","getReverseChanges","reverse","originalSequence","newSequence","continueProcessingPredicate","OriginalSequence","ModifiedSequence","ContinueProcessingPredicate","m_forwardHistory","m_reverseHistory","ElementsAreEqual","newIndex","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalStart","originalEnd","modifiedStart","modifiedEnd","changes","ComputeDiffRecursive","PrettifyChanges","quitEarlyArr","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","diagonal","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","MIN_VALUE","historyIndex","originalStartPoint","modifiedStartPoint","lastForwardChange","max","getOriginalEnd","getModifiedEnd","numDifferences","tempOriginalIndex","maxDifferences","numDiagonals","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","abs","matchLengthOfLongest","temp","change","originalStop","modifiedStop","checkOriginal","originalLength","checkModified","modifiedLength","mergedChangeArr","ChangesOverlap","splice","prevChange","bestDelta","bestScore","_boundaryScore","delta","score","_OriginalIsBoundary","test","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","left","right","diagonalBaseIndex","diffEven","DiffChange","ErrorHandler","errorHandler","onUnexpectedError","onUnexpectedExternalError","transformErrorForSerialization","isPromiseCanceledError","canceled","illegalArgument","illegalState","listeners","unexpectedErrorHandler","stack","emit","forEach","listener","error","$isError","stacktrace","canceledName","Event","Emitter","EventMultiplexer","EventBufferer","Relay","_errors_js__WEBPACK_IMPORTED_MODULE_0__","_functional_js__WEBPACK_IMPORTED_MODULE_1__","_lifecycle_js__WEBPACK_IMPORTED_MODULE_2__","_linkedList_js__WEBPACK_IMPORTED_MODULE_3__","_disposable","once","thisArgs","disposables","didFire","map","snapshot","each","reduce","merge","initial","output","emitter","onFirstListenerAdd","onLastListenerRemove","latch","cache","firstCall","shouldEmit","signal","any","events","arguments","debounce","delay","leading","leakWarningThreshold","subscription","numDebouncedCalls","cur","_output","stopwatch","start","Date","getTime","_","buffer","nextTick","_buffer","flush","onFirstListenerDidAdd","echo","onListenerDidAdd","ChainableEvent","on","chain","fromNodeEventEmitter","eventName","id","args","removeListener","fromPromise","promise","then","toPromise","Promise","_globalLeakWarningThreshold","LeakageMonitor","customThreshold","random","toString","_warnCountdown","_stacks","clear","check","listenerCount","_this","threshold","Map","split","join","count","set","topStack_1","topCount_1","console","warn","options","_disposed","_options","_leakageMon","_event","_listeners","firstListener","isEmpty","removeMonitor","remove","size","_noop","_deliveryQueue","iter","iterator","next","done","shift","event_1","hasListeners","add","hook","unhook","idx","buffers","wrapEvent","bufferEvents","pop","listening","inputEvent","inputEventListener","didCall","FIN","Iterator","getSequenceIterator","ArrayIterator","ArrayNavigator","MappedIterator","extendStatics","__extends","setPrototypeOf","__proto__","__","constructor","fromArray","_empty","empty","elements","collect","items","end","current","_super","previous","last","parent","KeyCodeUtils","KeyChord","createKeybinding","createSimpleKeybinding","SimpleKeybinding","ChordKeybinding","ResolvedKeybindingPart","ResolvedKeybinding","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","define","keyCode","str","toLowerCase","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","firstPart","secondPart","keybinding","OS","chordPart","ctrlCmd","winCtrl","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","ctrlKey","shiftKey","altKey","metaKey","isModifierKey","toChord","isDuplicateModifierCase","parts","kbLabel","kbAriaLabel","keyLabel","keyAriaLabel","isDisposable","rest","combinedDisposable","toDisposable","Disposable","ImmortalReference","_toDispose","_lifecycle_disposable_isDisposed","_register","LinkedList","_iterator_js__WEBPACK_IMPORTED_MODULE_0__","Node","_size","_first","unshift","_insert","atTheEnd","newNode","oldLast","_last","prev","oldFirst","_remove","res","node","candidate","anchor","LANGUAGE_DEFAULT","isWindows","isMacintosh","isLinux","isNative","isWeb","globals","setImmediate","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","isElectronRenderer","process","versions","electron","type","navigator","platform","rawNlsConfig","env","nlsConfig","JSON","parse","resolved","availableLanguages","locale","_translationsConfigFile","userAgent","language","self","global","_setImmediate","isFalsyOrWhitespace","pad","format","escape","escapeRegExpCharacters","trim","ltrim","rtrim","convertSimple2RegExpPattern","startsWith","endsWith","createRegExp","regExpLeadsToEndlessLoop","regExpFlags","firstNonWhitespaceIndex","getLeadingWhitespace","lastNonWhitespaceIndex","isLowerAsciiLetter","isUpperAsciiLetter","equalsIgnoreCase","startsWithIgnoreCase","commonPrefixLength","commonSuffixLength","isHighSurrogate","isLowSurrogate","containsRTL","containsEmoji","isBasicASCII","containsFullWidthCharacter","isFullWidthCharacter","UTF8_BOM_CHARACTER","startsWithUTF8BOM","safeBtoa","repeat","char","_formatRegexp","replace","match","group","parseInt","isNaN","html","haystack","needle","needleLen","offset","substring","haystackLen","lastIndexOf","pattern","diff","searchString","isRegex","wholeWord","charAt","modifiers","matchCase","multiline","unicode","RegExp","regexp","source","exec","lastIndex","ignoreCase","chCode","startIndex","code","isAsciiLetter","doEqualsIgnoreCase","stopAt","codeA","codeB","String","fromCharCode","candidateLength","aLastIndex","bLastIndex","charCode","CONTAINS_RTL","CONTAINS_EMOJI","IS_BASIC_ASCII","btoa","encodeURIComponent","isString","isObject","isNumber","isBoolean","isUndefined","isUndefinedOrNull","isEmptyObject","isFunction","validateConstraints","validateConstraint","getAllPropertyNames","_typeof","number","string","function","constraints","constraint","ctor","proto","getPrototypeOf","getOwnPropertyNames","URI","_platform_js__WEBPACK_IMPORTED_MODULE_0__","_schemePattern","_singleSlashStart","_doubleSlashStart","_throwOnMissingSchema","_slash","_regexp","schemeOrData","authority","path","query","fragment","_strict","scheme","_referenceResolution","ret","_validateUri","isUri","fsPath","with","_makeFsPath","_URI","decodeURIComponent","file","components","skipEncoding","_asFormatted","toJSON","revive","_fsPath","_formatted","external","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","substr","escaped","encodeURIComponentMinimal","uri","encoder","userinfo","logOnceWebWorkerWarning","SimpleWorkerClient","SimpleWorkerServer","_lifecycle_js__WEBPACK_IMPORTED_MODULE_1__","_platform_js__WEBPACK_IMPORTED_MODULE_2__","_types_js__WEBPACK_IMPORTED_MODULE_3__","INITIALIZE","webWorkerWarningLogged","err","SimpleWorkerProtocol","handler","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","method","req","resolve","reject","_send","vsWorker","handleMessage","serializedMessage","_handleMessage","msg","seq","replyMessage","reply","requestMessage","detail","strMsg","stringify","workerFactory","lazyProxyReject","_worker","_protocol","postMessage","getId","loaderConfiguration","require","getConfig","requirejs","contexts","config","_onModuleLoaded","_lazyProxy","availableMethods","proxy","availableMethods_1","methodName","createProxyMethod","proxyMethodRequest","_onError","_request","getProxyObject","info","postSerializedMessage","requestHandler","_requestHandler","onmessage","initialize","loaderConfig","methods","prop","baseUrl","paths","vs","catchError","handlerModule","_b","CharacterClassifier","CharacterSet","_uint_js__WEBPACK_IMPORTED_MODULE_0__","_defaultValue","defaultValue","_asciiMap","_createAsciiMap","_map","asciiMap","Uint8Array","_value","_actual","has","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","clone","lift","isIPosition","Range","_position_js__WEBPACK_IMPORTED_MODULE_0__","startLineNumber","startColumn","endLineNumber","endColumn","containsPosition","containsRange","otherRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","setEndPosition","setStartPosition","collapseToStart","fromPositions","isIRange","areIntersectingOrTouching","areIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","compareRangesUsingEnds","spansMultipleLines","Selection","_range_js__WEBPACK_IMPORTED_MODULE_1__","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","getPosition","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction","Token","TokenizationResult","TokenizationResult2","tokens","endState","Uint8Matrix","toUint8","toUint32","toUint32Array","rows","cols","_data","row","col","v","Uint32Array","DiffComputer","_base_common_diff_diff_js__WEBPACK_IMPORTED_MODULE_0__","_base_common_strings_js__WEBPACK_IMPORTED_MODULE_1__","MAXIMUM_RUN_TIME","MINIMUM_MATCHING_CHARACTER_LENGTH","computeDiff","modifiedSequence","LineMarkerSequence","lines","startColumns","endColumns","length_1","_getFirstNonBlankColumn","_getLastNonBlankColumn","_lines","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","txt","getCharSequence","shouldIgnoreTrimWhitespace","endIndex","charCodes","lineNumbers","columns","lineContent","CharSequence","_charCodes","_lineNumbers","_columns","getStartColumn","getEndColumn","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","LineChange","charChanges","createFromDiffResult","originalLineSequence","modifiedLineSequence","shouldComputeCharChanges","shouldPostProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","length_2","originalLines","modifiedLines","opts","shouldMakePrettyDiff","maximumRunTimeMs","computationStartTime","_continueProcessingPredicate","lineChanges","length_3","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","MirrorTextModel","_core_position_js__WEBPACK_IMPORTED_MODULE_0__","_viewModel_prefixSumComputer_js__WEBPACK_IMPORTED_MODULE_1__","eol","versionId","_uri","_eol","_versionId","_lineStarts","getText","onEvents","changes_1","_acceptDeleteRange","_acceptInsertText","text","_ensureLineStarts","eolLength","linesLength","lineStartValues","_setLineText","lineIndex","newValue","changeValue","removeValues","insertText","insertLines","newLengths","insertValues","USUAL_WORD_SEPARATORS","DEFAULT_WORD_REGEXP","ensureValidWordDefinition","getWordAtText","allowInWords","USUAL_WORD_SEPARATORS_1","sep","createWordRegExp","wordDefinition","flags","textOffset","matchIndex","word","getWordAtPosSlow","getWordAtPosFast","StateMachine","LinkComputer","computeLinks","_core_characterClassifier_js__WEBPACK_IMPORTED_MODULE_0__","_core_uint_js__WEBPACK_IMPORTED_MODULE_1__","edges","maxCharCode","maxState","states","_states","_maxCharCode","nextState","currentState","_stateMachine","_classifier","_createLink","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","url","model","stateMachine","getClassifier","lineCount","getLineCount","getLineContent","j","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","hasOpenCurlyBracket","resetStateMachine","chClass","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","n1","n2","parseFloat","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","BaseEditorSimpleWorker","EditorSimpleWorkerImpl","_base_common_arrays_js__WEBPACK_IMPORTED_MODULE_0__","_base_common_diff_diff_js__WEBPACK_IMPORTED_MODULE_1__","_base_common_iterator_js__WEBPACK_IMPORTED_MODULE_2__","_base_common_platform_js__WEBPACK_IMPORTED_MODULE_3__","_base_common_uri_js__WEBPACK_IMPORTED_MODULE_4__","_core_position_js__WEBPACK_IMPORTED_MODULE_5__","_core_range_js__WEBPACK_IMPORTED_MODULE_6__","_diff_diffComputer_js__WEBPACK_IMPORTED_MODULE_7__","_model_mirrorTextModel_js__WEBPACK_IMPORTED_MODULE_8__","_model_wordHelper_js__WEBPACK_IMPORTED_MODULE_9__","_modes_linkComputer_js__WEBPACK_IMPORTED_MODULE_10__","_modes_supports_inplaceReplaceSupport_js__WEBPACK_IMPORTED_MODULE_11__","_standalone_standaloneBase_js__WEBPACK_IMPORTED_MODULE_12__","_base_common_types_js__WEBPACK_IMPORTED_MODULE_13__","MirrorModel","getValue","getLinesContent","getWordAtPosition","wordAtText","getWordUntilPosition","wordAtPosition","createWordIterator","lineText","wordRangesIdx","wordRanges","_wordenize","getLineWords","content","words","ranges_1","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","getAccumulatedValue","positionAt","out","getIndexOf","lineLength","remainder","hasChanged","maxCharacter","foreignModuleFactory","_foreignModuleFactory","_foreignModule","originalUrl","modifiedUrl","ignoreTrimWhitespace","_getModel","identical","_modelsAreIdentical","originalLineCount","computeMoreMinimalEdits","modelUrl","edits","lastEol","edits_1","_diffLimit","editOffset","newEdit","textualSuggest","wordDef","wordDefFlags","suggestions","wordDefRegExp","currentWord","_suggestionsLimit","kind","label","computeWordRanges","words_1","selectionText","wordRange","loadForeignModule","createData","ctx","getMirrorModels","_getModels","fmr","_models","all","keys","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","importScripts","monaco","finallyConstructor","reason","setTimeoutFunc","noop","TypeError","_state","_handled","_deferreds","doResolve","deferred","_immediateFn","cb","onFulfilled","onRejected","finale","thisArg","_unhandledRejectionFn","Handler","ex","prom","remaining","val","race","values","globalNS","window","factory","KeyMod","createMonacoBaseAPI","_base_common_cancellation_js__WEBPACK_IMPORTED_MODULE_1__","_base_common_event_js__WEBPACK_IMPORTED_MODULE_2__","_base_common_keyCodes_js__WEBPACK_IMPORTED_MODULE_3__","_core_selection_js__WEBPACK_IMPORTED_MODULE_7__","_core_token_js__WEBPACK_IMPORTED_MODULE_8__","_standaloneEnums_js__WEBPACK_IMPORTED_MODULE_9__","chord","CtrlCmd","Shift","Alt","WinCtrl","editor","languages","KeyCode","SelectionDirection","MarkerSeverity","MarkerTag","Uri","ScrollbarVisibility","OverviewRulerLane","EndOfLinePreference","DefaultEndOfLine","EndOfLineSequence","TrackedRangeStickiness","ScrollType","CursorChangeReason","RenderMinimap","WrappingIndent","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","RenderLineNumbersType","ContentWidgetPositionPreference","OverlayWidgetPositionPreference","MouseTargetType","IndentAction","CompletionItemKind","CompletionItemInsertTextRule","CompletionTriggerKind","SignatureHelpTriggerKind","DocumentHighlightKind","SymbolKind","PrefixSumIndexOfResult","PrefixSumComputer","PrefixSumComputerWithCache","_core_uint_js__WEBPACK_IMPORTED_MODULE_0__","prefixSum","prefixSumValidIndex","Int32Array","getCount","oldValues","oldPrefixSum","insertValuesLen","subarray","cnt","maxCnt","getTotalValue","_getAccumulatedValue","accumulatedValue","midStop","midStart","_cacheAccumulatedValueStart","_cache","_bustCache","cacheIndex","warmUpCache","accumulatedValueStart","accumulatedValueEnd","newCache","_base_common_worker_simpleWorker_js__WEBPACK_IMPORTED_MODULE_0__","_common_services_editorSimpleWorker_js__WEBPACK_IMPORTED_MODULE_1__","initialized","foreignModule","editorWorker","simpleWorker"],"mappings":"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","file":"editor.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"../../node_modules/monaco-editor/esm/vs/editor/editor.worker.js\");\n","/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail(array, n) {\n    if (n === void 0) { n = 0; }\n    return array[array.length - (1 + n)];\n}\nexport function tail2(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function equals(one, other, itemEquals) {\n    if (itemEquals === void 0) { itemEquals = function (a, b) { return a === b; }; }\n    if (one === other) {\n        return true;\n    }\n    if (!one || !other) {\n        return false;\n    }\n    if (one.length !== other.length) {\n        return false;\n    }\n    for (var i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function binarySearch(array, key, comparator) {\n    var low = 0, high = array.length - 1;\n    while (low <= high) {\n        var mid = ((low + high) / 2) | 0;\n        var comp = comparator(array[mid], key);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted(array, p) {\n    var low = 0, high = array.length;\n    if (high === 0) {\n        return 0; // no children\n    }\n    while (low < high) {\n        var mid = Math.floor((low + high) / 2);\n        if (p(array[mid])) {\n            high = mid;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort(data, compare) {\n    _sort(data, compare, 0, data.length - 1, []);\n    return data;\n}\nfunction _merge(a, compare, lo, mid, hi, aux) {\n    var leftIdx = lo, rightIdx = mid + 1;\n    for (var i = lo; i <= hi; i++) {\n        aux[i] = a[i];\n    }\n    for (var i = lo; i <= hi; i++) {\n        if (leftIdx > mid) {\n            // left side consumed\n            a[i] = aux[rightIdx++];\n        }\n        else if (rightIdx > hi) {\n            // right side consumed\n            a[i] = aux[leftIdx++];\n        }\n        else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n            // right element is less -> comes first\n            a[i] = aux[rightIdx++];\n        }\n        else {\n            // left element comes first (less or equal)\n            a[i] = aux[leftIdx++];\n        }\n    }\n}\nfunction _sort(a, compare, lo, hi, aux) {\n    if (hi <= lo) {\n        return;\n    }\n    var mid = lo + ((hi - lo) / 2) | 0;\n    _sort(a, compare, lo, mid, aux);\n    _sort(a, compare, mid + 1, hi, aux);\n    if (compare(a[mid], a[mid + 1]) <= 0) {\n        // left and right are sorted and if the last-left element is less\n        // or equals than the first-right element there is nothing else\n        // to do\n        return;\n    }\n    _merge(a, compare, lo, mid, hi, aux);\n}\nexport function groupBy(data, compare) {\n    var result = [];\n    var currentGroup = undefined;\n    for (var _i = 0, _a = mergeSort(data.slice(0), compare); _i < _a.length; _i++) {\n        var element = _a[_i];\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n            currentGroup = [element];\n            result.push(currentGroup);\n        }\n        else {\n            currentGroup.push(element);\n        }\n    }\n    return result;\n}\n/**\n * @returns a new array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce(array) {\n    if (!array) {\n        return array;\n    }\n    return array.filter(function (e) { return !!e; });\n}\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj) {\n    return !Array.isArray(obj) || obj.length === 0;\n}\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray(obj) {\n    return Array.isArray(obj) && obj.length > 0;\n}\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct(array, keyFn) {\n    if (!keyFn) {\n        return array.filter(function (element, position) {\n            return array.indexOf(element) === position;\n        });\n    }\n    var seen = Object.create(null);\n    return array.filter(function (elem) {\n        var key = keyFn(elem);\n        if (seen[key]) {\n            return false;\n        }\n        seen[key] = true;\n        return true;\n    });\n}\nexport function firstIndex(array, fn) {\n    for (var i = 0; i < array.length; i++) {\n        var element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function first(array, fn, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = null; }\n    var index = firstIndex(array, fn);\n    return index < 0 ? notFoundValue : array[index];\n}\nexport function flatten(arr) {\n    var _a;\n    return (_a = []).concat.apply(_a, arr);\n}\nexport function range(arg, to) {\n    var from = typeof to === 'number' ? arg : 0;\n    if (typeof to === 'number') {\n        from = arg;\n    }\n    else {\n        from = 0;\n        to = arg;\n    }\n    var result = [];\n    if (from <= to) {\n        for (var i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (var i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert(target, insertIndex, insertArr) {\n    var before = target.slice(0, insertIndex);\n    var after = target.slice(insertIndex);\n    return before.concat(insertArr, after);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nvar shortcutEvent = Object.freeze(function (callback, context) {\n    var handle = setTimeout(callback.bind(context), 0);\n    return { dispose: function () { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nvar MutableToken = /** @class */ (function () {\n    function MutableToken() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    MutableToken.prototype.cancel = function () {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    };\n    Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\n        get: function () {\n            return this._isCancelled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\n        get: function () {\n            if (this._isCancelled) {\n                return shortcutEvent;\n            }\n            if (!this._emitter) {\n                this._emitter = new Emitter();\n            }\n            return this._emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MutableToken.prototype.dispose = function () {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    };\n    return MutableToken;\n}());\nvar CancellationTokenSource = /** @class */ (function () {\n    function CancellationTokenSource() {\n    }\n    Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\n        get: function () {\n            if (!this._token) {\n                // be lazy and create the token only when\n                // actually needed\n                this._token = new MutableToken();\n            }\n            return this._token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CancellationTokenSource.prototype.cancel = function () {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    };\n    CancellationTokenSource.prototype.dispose = function () {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    };\n    return CancellationTokenSource;\n}());\nexport { CancellationTokenSource };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DiffChange } from './diffChange.js';\nfunction createStringSequence(a) {\n    return {\n        getLength: function () { return a.length; },\n        getElementAtIndex: function (pos) { return a.charCodeAt(pos); }\n    };\n}\nexport function stringDiff(original, modified, pretty) {\n    return new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff(pretty);\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nvar Debug = /** @class */ (function () {\n    function Debug() {\n    }\n    Debug.Assert = function (condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    };\n    return Debug;\n}());\nexport { Debug };\nvar MyArray = /** @class */ (function () {\n    function MyArray() {\n    }\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    MyArray.Copy = function (sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (var i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    };\n    return MyArray;\n}());\nexport { MyArray };\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nvar MaxDifferencesHistory = 1447;\n//let MaxDifferencesHistory = 100;\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nvar DiffChangeHelper = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    function DiffChangeHelper() {\n        this.m_changes = [];\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    DiffChangeHelper.prototype.MarkNextChange = function () {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n    };\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    DiffChangeHelper.prototype.AddOriginalElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    };\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    DiffChangeHelper.prototype.AddModifiedElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    };\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    DiffChangeHelper.prototype.getChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    };\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    DiffChangeHelper.prototype.getReverseChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    };\n    return DiffChangeHelper;\n}());\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nvar LcsDiff = /** @class */ (function () {\n    /**\n     * Constructs the DiffFinder\n     */\n    function LcsDiff(originalSequence, newSequence, continueProcessingPredicate) {\n        if (continueProcessingPredicate === void 0) { continueProcessingPredicate = null; }\n        this.OriginalSequence = originalSequence;\n        this.ModifiedSequence = newSequence;\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    LcsDiff.prototype.ElementsAreEqual = function (originalIndex, newIndex) {\n        return (this.OriginalSequence.getElementAtIndex(originalIndex) === this.ModifiedSequence.getElementAtIndex(newIndex));\n    };\n    LcsDiff.prototype.OriginalElementsAreEqual = function (index1, index2) {\n        return (this.OriginalSequence.getElementAtIndex(index1) === this.OriginalSequence.getElementAtIndex(index2));\n    };\n    LcsDiff.prototype.ModifiedElementsAreEqual = function (index1, index2) {\n        return (this.ModifiedSequence.getElementAtIndex(index1) === this.ModifiedSequence.getElementAtIndex(index2));\n    };\n    LcsDiff.prototype.ComputeDiff = function (pretty) {\n        return this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1, pretty);\n    };\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype._ComputeDiff = function (originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        var quitEarlyArr = [false];\n        var changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            return this.PrettifyChanges(changes);\n        }\n        return changes;\n    };\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype.ComputeDiffRecursive = function (originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            var changes = void 0;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        var midOriginalArr = [0], midModifiedArr = [0];\n        var result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        var midOriginal = midOriginalArr[0];\n        var midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            var leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            var rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We did't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    };\n    LcsDiff.prototype.WALKTRACE = function (diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        var forwardChanges = null, reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        var changeHelper = new DiffChangeHelper();\n        var diagonalMin = diagonalForwardStart;\n        var diagonalMax = diagonalForwardEnd;\n        var diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        var lastOriginalIndex = Number.MIN_VALUE;\n        var historyIndex = this.m_forwardHistory.length - 1;\n        var diagonal;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            var originalStartPoint = midOriginalArr[0] + 1;\n            var modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                var lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = Number.MAX_VALUE;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    };\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    LcsDiff.prototype.ComputeRecursionPoint = function (originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        var originalIndex = 0, modifiedIndex = 0;\n        var diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        var diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        var numDifferences;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        var maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        var numDiagonals = maxDifferences + 1;\n        var forwardPoints = new Array(numDiagonals);\n        var reversePoints = new Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        var diagonalForwardBase = (modifiedEnd - modifiedStart);\n        var diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        var diagonalForwardOffset = (originalStart - modifiedStart);\n        var diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        var delta = diagonalReverseBase - diagonalForwardBase;\n        var deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        var diagonal, tempOriginalIndex;\n        for (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            var furthestOriginalIndex = 0;\n            var furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            var matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quiting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= MaxDifferencesHistory) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                var temp = new Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    };\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    LcsDiff.prototype.PrettifyChanges = function (changes) {\n        // Shift all the changes down first\n        for (var i = 0; i < changes.length; i++) {\n            var change = changes[i];\n            var originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this.OriginalSequence.getLength();\n            var modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this.ModifiedSequence.getLength();\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop &&\n                change.modifiedStart + change.modifiedLength < modifiedStop &&\n                (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n                (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            var mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (var i = changes.length - 1; i >= 0; i--) {\n            var change = changes[i];\n            var originalStop = 0;\n            var modifiedStop = 0;\n            if (i > 0) {\n                var prevChange = changes[i - 1];\n                if (prevChange.originalLength > 0) {\n                    originalStop = prevChange.originalStart + prevChange.originalLength;\n                }\n                if (prevChange.modifiedLength > 0) {\n                    modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n                }\n            }\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            var bestDelta = 0;\n            var bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (var delta = 1;; delta++) {\n                var originalStart = change.originalStart - delta;\n                var modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                var score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n        }\n        return changes;\n    };\n    LcsDiff.prototype._OriginalIsBoundary = function (index) {\n        if (index <= 0 || index >= this.OriginalSequence.getLength() - 1) {\n            return true;\n        }\n        var element = this.OriginalSequence.getElementAtIndex(index);\n        return (typeof element === 'string' && /^\\s*$/.test(element));\n    };\n    LcsDiff.prototype._OriginalRegionIsBoundary = function (originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            var originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._ModifiedIsBoundary = function (index) {\n        if (index <= 0 || index >= this.ModifiedSequence.getLength() - 1) {\n            return true;\n        }\n        var element = this.ModifiedSequence.getElementAtIndex(index);\n        return (typeof element === 'string' && /^\\s*$/.test(element));\n    };\n    LcsDiff.prototype._ModifiedRegionIsBoundary = function (modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            var modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._boundaryScore = function (originalStart, originalLength, modifiedStart, modifiedLength) {\n        var originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        var modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    };\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    LcsDiff.prototype.ConcatenateChanges = function (left, right) {\n        var mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            var result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            var result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    };\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    LcsDiff.prototype.ChangesOverlap = function (left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            var originalStart = left.originalStart;\n            var originalLength = left.originalLength;\n            var modifiedStart = left.modifiedStart;\n            var modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    };\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    LcsDiff.prototype.ClipDiagonalBound = function (diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        var diagonalsBelow = diagonalBaseIndex;\n        var diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        var diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            var lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            var upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    };\n    return LcsDiff;\n}());\nexport { LcsDiff };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Represents information about a specific difference between two sequences.\n */\nvar DiffChange = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    function DiffChange(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    DiffChange.prototype.getOriginalEnd = function () {\n        return this.originalStart + this.originalLength;\n    };\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    DiffChange.prototype.getModifiedEnd = function () {\n        return this.modifiedStart + this.modifiedLength;\n    };\n    return DiffChange;\n}());\nexport { DiffChange };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(function () {\n                if (e.stack) {\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    ErrorHandler.prototype.emit = function (e) {\n        this.listeners.forEach(function (listener) {\n            listener(e);\n        });\n    };\n    ErrorHandler.prototype.onUnexpectedError = function (e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    };\n    // For external errors, we don't want the listeners to be called\n    ErrorHandler.prototype.onUnexpectedExternalError = function (e) {\n        this.unexpectedErrorHandler(e);\n    };\n    return ErrorHandler;\n}());\nexport { ErrorHandler };\nexport var errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        var name_1 = error.name, message = error.message;\n        var stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name: name_1,\n            message: message,\n            stack: stack\n        };\n    }\n    // return as is\n    return error;\n}\nvar canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error) {\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled() {\n    var error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(\"Illegal argument: \" + name);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(\"Illegal state: \" + name);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { onUnexpectedError } from './errors.js';\nimport { once as onceFn } from './functional.js';\nimport { combinedDisposable, Disposable, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nexport var Event;\n(function (Event) {\n    var _disposable = { dispose: function () { } };\n    Event.None = function () { return _disposable; };\n    /**\n     * Given an event, returns another event which only fires once.\n     */\n    function once(event) {\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            // we need this, in case the event fires during the listener call\n            var didFire = false;\n            var result;\n            result = event(function (e) {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    /**\n     * Given an event and a `map` function, returns another event which maps each element\n     * throught the mapping function.\n     */\n    function map(event, map) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (i) { return listener.call(thisArgs, map(i)); }, null, disposables);\n        });\n    }\n    Event.map = map;\n    /**\n     * Given an event and an `each` function, returns another identical event and calls\n     * the `each` function per each element.\n     */\n    function forEach(event, each) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (i) { each(i); listener.call(thisArgs, i); }, null, disposables);\n        });\n    }\n    Event.forEach = forEach;\n    function filter(event, filter) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (e) { return filter(e) && listener.call(thisArgs, e); }, null, disposables);\n        });\n    }\n    Event.filter = filter;\n    /**\n     * Given an event, returns the same event but typed as `Event<void>`.\n     */\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    /**\n     * Given a collection of events, returns a single event which emits\n     * whenever any of the provided events emit.\n     */\n    function any() {\n        var events = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            events[_i] = arguments[_i];\n        }\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return combinedDisposable(events.map(function (event) { return event(function (e) { return listener.call(thisArgs, e); }, null, disposables); }));\n        };\n    }\n    Event.any = any;\n    /**\n     * Given an event and a `merge` function, returns another event which maps each element\n     * and the cummulative result throught the `merge` function. Similar to `map`, but with memory.\n     */\n    function reduce(event, merge, initial) {\n        var output = initial;\n        return map(event, function (e) {\n            output = merge(output, e);\n            return output;\n        });\n    }\n    Event.reduce = reduce;\n    /**\n     * Given a chain of event processing functions (filter, map, etc), each\n     * function will be invoked per event & per listener. Snapshotting an event\n     * chain allows each function to be invoked just once per event.\n     */\n    function snapshot(event) {\n        var listener;\n        var emitter = new Emitter({\n            onFirstListenerAdd: function () {\n                listener = event(emitter.fire, emitter);\n            },\n            onLastListenerRemove: function () {\n                listener.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.snapshot = snapshot;\n    function debounce(event, merge, delay, leading, leakWarningThreshold) {\n        if (delay === void 0) { delay = 100; }\n        if (leading === void 0) { leading = false; }\n        var subscription;\n        var output = undefined;\n        var handle = undefined;\n        var numDebouncedCalls = 0;\n        var emitter = new Emitter({\n            leakWarningThreshold: leakWarningThreshold,\n            onFirstListenerAdd: function () {\n                subscription = event(function (cur) {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                    }\n                    clearTimeout(handle);\n                    handle = setTimeout(function () {\n                        var _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    }, delay);\n                });\n            },\n            onLastListenerRemove: function () {\n                subscription.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    /**\n     * Given an event, it returns another event which fires only once and as soon as\n     * the input event emits. The event data is the number of millis it took for the\n     * event to fire.\n     */\n    function stopwatch(event) {\n        var start = new Date().getTime();\n        return map(once(event), function (_) { return new Date().getTime() - start; });\n    }\n    Event.stopwatch = stopwatch;\n    /**\n     * Given an event, it returns another event which fires only when the event\n     * element changes.\n     */\n    function latch(event) {\n        var firstCall = true;\n        var cache;\n        return filter(event, function (value) {\n            var shouldEmit = firstCall || value !== cache;\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        });\n    }\n    Event.latch = latch;\n    /**\n     * Buffers the provided event until a first listener comes\n     * along, at which point fire all the events at once and\n     * pipe the event from then on.\n     *\n     * ```typescript\n     * const emitter = new Emitter<number>();\n     * const event = emitter.event;\n     * const bufferedEvent = buffer(event);\n     *\n     * emitter.fire(1);\n     * emitter.fire(2);\n     * emitter.fire(3);\n     * // nothing...\n     *\n     * const listener = bufferedEvent(num => console.log(num));\n     * // 1, 2, 3\n     *\n     * emitter.fire(4);\n     * // 4\n     * ```\n     */\n    function buffer(event, nextTick, _buffer) {\n        if (nextTick === void 0) { nextTick = false; }\n        if (_buffer === void 0) { _buffer = []; }\n        var buffer = _buffer.slice();\n        var listener = event(function (e) {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        var flush = function () {\n            if (buffer) {\n                buffer.forEach(function (e) { return emitter.fire(e); });\n            }\n            buffer = null;\n        };\n        var emitter = new Emitter({\n            onFirstListenerAdd: function () {\n                if (!listener) {\n                    listener = event(function (e) { return emitter.fire(e); });\n                }\n            },\n            onFirstListenerDidAdd: function () {\n                if (buffer) {\n                    if (nextTick) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onLastListenerRemove: function () {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        });\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    /**\n     * Similar to `buffer` but it buffers indefinitely and repeats\n     * the buffered events to every new listener.\n     */\n    function echo(event, nextTick, buffer) {\n        if (nextTick === void 0) { nextTick = false; }\n        if (buffer === void 0) { buffer = []; }\n        buffer = buffer.slice();\n        event(function (e) {\n            buffer.push(e);\n            emitter.fire(e);\n        });\n        var flush = function (listener, thisArgs) { return buffer.forEach(function (e) { return listener.call(thisArgs, e); }); };\n        var emitter = new Emitter({\n            onListenerDidAdd: function (emitter, listener, thisArgs) {\n                if (nextTick) {\n                    setTimeout(function () { return flush(listener, thisArgs); });\n                }\n                else {\n                    flush(listener, thisArgs);\n                }\n            }\n        });\n        return emitter.event;\n    }\n    Event.echo = echo;\n    var ChainableEvent = /** @class */ (function () {\n        function ChainableEvent(event) {\n            this.event = event;\n        }\n        ChainableEvent.prototype.map = function (fn) {\n            return new ChainableEvent(map(this.event, fn));\n        };\n        ChainableEvent.prototype.forEach = function (fn) {\n            return new ChainableEvent(forEach(this.event, fn));\n        };\n        ChainableEvent.prototype.filter = function (fn) {\n            return new ChainableEvent(filter(this.event, fn));\n        };\n        ChainableEvent.prototype.reduce = function (merge, initial) {\n            return new ChainableEvent(reduce(this.event, merge, initial));\n        };\n        ChainableEvent.prototype.latch = function () {\n            return new ChainableEvent(latch(this.event));\n        };\n        ChainableEvent.prototype.on = function (listener, thisArgs, disposables) {\n            return this.event(listener, thisArgs, disposables);\n        };\n        ChainableEvent.prototype.once = function (listener, thisArgs, disposables) {\n            return once(this.event)(listener, thisArgs, disposables);\n        };\n        return ChainableEvent;\n    }());\n    function chain(event) {\n        return new ChainableEvent(event);\n    }\n    Event.chain = chain;\n    function fromNodeEventEmitter(emitter, eventName, map) {\n        if (map === void 0) { map = function (id) { return id; }; }\n        var fn = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return result.fire(map.apply(void 0, args));\n        };\n        var onFirstListenerAdd = function () { return emitter.on(eventName, fn); };\n        var onLastListenerRemove = function () { return emitter.removeListener(eventName, fn); };\n        var result = new Emitter({ onFirstListenerAdd: onFirstListenerAdd, onLastListenerRemove: onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    function fromPromise(promise) {\n        var emitter = new Emitter();\n        var shouldEmit = false;\n        promise\n            .then(undefined, function () { return null; })\n            .then(function () {\n            if (!shouldEmit) {\n                setTimeout(function () { return emitter.fire(undefined); }, 0);\n            }\n            else {\n                emitter.fire(undefined);\n            }\n        });\n        shouldEmit = true;\n        return emitter.event;\n    }\n    Event.fromPromise = fromPromise;\n    function toPromise(event) {\n        return new Promise(function (c) { return once(event)(c); });\n    }\n    Event.toPromise = toPromise;\n})(Event || (Event = {}));\nvar _globalLeakWarningThreshold = -1;\nvar LeakageMonitor = /** @class */ (function () {\n    function LeakageMonitor(customThreshold, name) {\n        if (name === void 0) { name = Math.random().toString(18).slice(2, 5); }\n        this.customThreshold = customThreshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    LeakageMonitor.prototype.dispose = function () {\n        if (this._stacks) {\n            this._stacks.clear();\n        }\n    };\n    LeakageMonitor.prototype.check = function (listenerCount) {\n        var _this = this;\n        var threshold = _globalLeakWarningThreshold;\n        if (typeof this.customThreshold === 'number') {\n            threshold = this.customThreshold;\n        }\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = new Map();\n        }\n        var stack = new Error().stack.split('\\n').slice(3).join('\\n');\n        var count = (this._stacks.get(stack) || 0);\n        this._stacks.set(stack, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._warnCountdown = threshold * 0.5;\n            // find most frequent listener and print warning\n            var topStack_1;\n            var topCount_1 = 0;\n            this._stacks.forEach(function (count, stack) {\n                if (!topStack_1 || topCount_1 < count) {\n                    topStack_1 = stack;\n                    topCount_1 = count;\n                }\n            });\n            console.warn(\"[\" + this.name + \"] potential listener LEAK detected, having \" + listenerCount + \" listeners already. MOST frequent listener (\" + topCount_1 + \"):\");\n            console.warn(topStack_1);\n        }\n        return function () {\n            var count = (_this._stacks.get(stack) || 0);\n            _this._stacks.set(stack, count - 1);\n        };\n    };\n    return LeakageMonitor;\n}());\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nvar Emitter = /** @class */ (function () {\n    function Emitter(options) {\n        this._disposed = false;\n        this._options = options;\n        this._leakageMon = _globalLeakWarningThreshold > 0\n            ? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n            : undefined;\n    }\n    Object.defineProperty(Emitter.prototype, \"event\", {\n        /**\n         * For the public to allow to subscribe\n         * to events from this Emitter\n         */\n        get: function () {\n            var _this = this;\n            if (!this._event) {\n                this._event = function (listener, thisArgs, disposables) {\n                    if (!_this._listeners) {\n                        _this._listeners = new LinkedList();\n                    }\n                    var firstListener = _this._listeners.isEmpty();\n                    if (firstListener && _this._options && _this._options.onFirstListenerAdd) {\n                        _this._options.onFirstListenerAdd(_this);\n                    }\n                    var remove = _this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n                    if (firstListener && _this._options && _this._options.onFirstListenerDidAdd) {\n                        _this._options.onFirstListenerDidAdd(_this);\n                    }\n                    if (_this._options && _this._options.onListenerDidAdd) {\n                        _this._options.onListenerDidAdd(_this, listener, thisArgs);\n                    }\n                    // check and record this emitter for potential leakage\n                    var removeMonitor;\n                    if (_this._leakageMon) {\n                        removeMonitor = _this._leakageMon.check(_this._listeners.size);\n                    }\n                    var result;\n                    result = {\n                        dispose: function () {\n                            if (removeMonitor) {\n                                removeMonitor();\n                            }\n                            result.dispose = Emitter._noop;\n                            if (!_this._disposed) {\n                                remove();\n                                if (_this._options && _this._options.onLastListenerRemove) {\n                                    var hasListeners = (_this._listeners && !_this._listeners.isEmpty());\n                                    if (!hasListeners) {\n                                        _this._options.onLastListenerRemove(_this);\n                                    }\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(disposables)) {\n                        disposables.push(result);\n                    }\n                    return result;\n                };\n            }\n            return this._event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    Emitter.prototype.fire = function (event) {\n        if (this._listeners) {\n            // put all [listener,event]-pairs into delivery queue\n            // then emit all event. an inner/nested event might be\n            // the driver of this\n            if (!this._deliveryQueue) {\n                this._deliveryQueue = [];\n            }\n            for (var iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n                this._deliveryQueue.push([e.value, event]);\n            }\n            while (this._deliveryQueue.length > 0) {\n                var _a = this._deliveryQueue.shift(), listener = _a[0], event_1 = _a[1];\n                try {\n                    if (typeof listener === 'function') {\n                        listener.call(undefined, event_1);\n                    }\n                    else {\n                        listener[0].call(listener[1], event_1);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }\n        }\n    };\n    Emitter.prototype.dispose = function () {\n        if (this._listeners) {\n            this._listeners = undefined;\n        }\n        if (this._deliveryQueue) {\n            this._deliveryQueue.length = 0;\n        }\n        if (this._leakageMon) {\n            this._leakageMon.dispose();\n        }\n        this._disposed = true;\n    };\n    Emitter._noop = function () { };\n    return Emitter;\n}());\nexport { Emitter };\nvar EventMultiplexer = /** @class */ (function () {\n    function EventMultiplexer() {\n        var _this = this;\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = new Emitter({\n            onFirstListenerAdd: function () { return _this.onFirstListenerAdd(); },\n            onLastListenerRemove: function () { return _this.onLastListenerRemove(); }\n        });\n    }\n    Object.defineProperty(EventMultiplexer.prototype, \"event\", {\n        get: function () {\n            return this.emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EventMultiplexer.prototype.add = function (event) {\n        var _this = this;\n        var e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        var dispose = function () {\n            if (_this.hasListeners) {\n                _this.unhook(e);\n            }\n            var idx = _this.events.indexOf(e);\n            _this.events.splice(idx, 1);\n        };\n        return toDisposable(onceFn(dispose));\n    };\n    EventMultiplexer.prototype.onFirstListenerAdd = function () {\n        var _this = this;\n        this.hasListeners = true;\n        this.events.forEach(function (e) { return _this.hook(e); });\n    };\n    EventMultiplexer.prototype.onLastListenerRemove = function () {\n        var _this = this;\n        this.hasListeners = false;\n        this.events.forEach(function (e) { return _this.unhook(e); });\n    };\n    EventMultiplexer.prototype.hook = function (e) {\n        var _this = this;\n        e.listener = e.event(function (r) { return _this.emitter.fire(r); });\n    };\n    EventMultiplexer.prototype.unhook = function (e) {\n        if (e.listener) {\n            e.listener.dispose();\n        }\n        e.listener = null;\n    };\n    EventMultiplexer.prototype.dispose = function () {\n        this.emitter.dispose();\n    };\n    return EventMultiplexer;\n}());\nexport { EventMultiplexer };\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nvar EventBufferer = /** @class */ (function () {\n    function EventBufferer() {\n        this.buffers = [];\n    }\n    EventBufferer.prototype.wrapEvent = function (event) {\n        var _this = this;\n        return function (listener, thisArgs, disposables) {\n            return event(function (i) {\n                var buffer = _this.buffers[_this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(function () { return listener.call(thisArgs, i); });\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, undefined, disposables);\n        };\n    };\n    EventBufferer.prototype.bufferEvents = function (fn) {\n        var buffer = [];\n        this.buffers.push(buffer);\n        var r = fn();\n        this.buffers.pop();\n        buffer.forEach(function (flush) { return flush(); });\n        return r;\n    };\n    return EventBufferer;\n}());\nexport { EventBufferer };\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nvar Relay = /** @class */ (function () {\n    function Relay() {\n        var _this = this;\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = new Emitter({\n            onFirstListenerDidAdd: function () {\n                _this.listening = true;\n                _this.inputEventListener = _this.inputEvent(_this.emitter.fire, _this.emitter);\n            },\n            onLastListenerRemove: function () {\n                _this.listening = false;\n                _this.inputEventListener.dispose();\n            }\n        });\n        this.event = this.emitter.event;\n    }\n    Object.defineProperty(Relay.prototype, \"input\", {\n        set: function (event) {\n            this.inputEvent = event;\n            if (this.listening) {\n                this.inputEventListener.dispose();\n                this.inputEventListener = event(this.emitter.fire, this.emitter);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Relay.prototype.dispose = function () {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    };\n    return Relay;\n}());\nexport { Relay };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function once(fn) {\n    var _this = this;\n    var didCall = false;\n    var result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        result = fn.apply(_this, arguments);\n        return result;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport var FIN = { done: true, value: undefined };\nexport var Iterator;\n(function (Iterator) {\n    var _empty = {\n        next: function () {\n            return FIN;\n        }\n    };\n    function empty() {\n        return _empty;\n    }\n    Iterator.empty = empty;\n    function fromArray(array, index, length) {\n        if (index === void 0) { index = 0; }\n        if (length === void 0) { length = array.length; }\n        return {\n            next: function () {\n                if (index >= length) {\n                    return FIN;\n                }\n                return { done: false, value: array[index++] };\n            }\n        };\n    }\n    Iterator.fromArray = fromArray;\n    function from(elements) {\n        if (!elements) {\n            return Iterator.empty();\n        }\n        else if (Array.isArray(elements)) {\n            return Iterator.fromArray(elements);\n        }\n        else {\n            return elements;\n        }\n    }\n    Iterator.from = from;\n    function map(iterator, fn) {\n        return {\n            next: function () {\n                var element = iterator.next();\n                if (element.done) {\n                    return FIN;\n                }\n                else {\n                    return { done: false, value: fn(element.value) };\n                }\n            }\n        };\n    }\n    Iterator.map = map;\n    function filter(iterator, fn) {\n        return {\n            next: function () {\n                while (true) {\n                    var element = iterator.next();\n                    if (element.done) {\n                        return FIN;\n                    }\n                    if (fn(element.value)) {\n                        return { done: false, value: element.value };\n                    }\n                }\n            }\n        };\n    }\n    Iterator.filter = filter;\n    function forEach(iterator, fn) {\n        for (var next = iterator.next(); !next.done; next = iterator.next()) {\n            fn(next.value);\n        }\n    }\n    Iterator.forEach = forEach;\n    function collect(iterator) {\n        var result = [];\n        forEach(iterator, function (value) { return result.push(value); });\n        return result;\n    }\n    Iterator.collect = collect;\n})(Iterator || (Iterator = {}));\nexport function getSequenceIterator(arg) {\n    if (Array.isArray(arg)) {\n        return Iterator.fromArray(arg);\n    }\n    else {\n        return arg;\n    }\n}\nvar ArrayIterator = /** @class */ (function () {\n    function ArrayIterator(items, start, end, index) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = items.length; }\n        if (index === void 0) { index = start - 1; }\n        this.items = items;\n        this.start = start;\n        this.end = end;\n        this.index = index;\n    }\n    ArrayIterator.prototype.next = function () {\n        this.index = Math.min(this.index + 1, this.end);\n        return this.current();\n    };\n    ArrayIterator.prototype.current = function () {\n        if (this.index === this.start - 1 || this.index === this.end) {\n            return null;\n        }\n        return this.items[this.index];\n    };\n    return ArrayIterator;\n}());\nexport { ArrayIterator };\nvar ArrayNavigator = /** @class */ (function (_super) {\n    __extends(ArrayNavigator, _super);\n    function ArrayNavigator(items, start, end, index) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = items.length; }\n        if (index === void 0) { index = start - 1; }\n        return _super.call(this, items, start, end, index) || this;\n    }\n    ArrayNavigator.prototype.current = function () {\n        return _super.prototype.current.call(this);\n    };\n    ArrayNavigator.prototype.previous = function () {\n        this.index = Math.max(this.index - 1, this.start - 1);\n        return this.current();\n    };\n    ArrayNavigator.prototype.first = function () {\n        this.index = this.start;\n        return this.current();\n    };\n    ArrayNavigator.prototype.last = function () {\n        this.index = this.end - 1;\n        return this.current();\n    };\n    ArrayNavigator.prototype.parent = function () {\n        return null;\n    };\n    return ArrayNavigator;\n}(ArrayIterator));\nexport { ArrayNavigator };\nvar MappedIterator = /** @class */ (function () {\n    function MappedIterator(iterator, fn) {\n        this.iterator = iterator;\n        this.fn = fn;\n        // noop\n    }\n    MappedIterator.prototype.next = function () { return this.fn(this.iterator.next()); };\n    return MappedIterator;\n}());\nexport { MappedIterator };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nvar KeyCodeStrMap = /** @class */ (function () {\n    function KeyCodeStrMap() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    KeyCodeStrMap.prototype.define = function (keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    };\n    KeyCodeStrMap.prototype.keyCodeToStr = function (keyCode) {\n        return this._keyCodeToStr[keyCode];\n    };\n    KeyCodeStrMap.prototype.strToKeyCode = function (str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n    };\n    return KeyCodeStrMap;\n}());\nvar uiMap = new KeyCodeStrMap();\nvar userSettingsUSMap = new KeyCodeStrMap();\nvar userSettingsGeneralMap = new KeyCodeStrMap();\n(function () {\n    function define(keyCode, uiLabel, usUserSettingsLabel, generalUserSettingsLabel) {\n        if (usUserSettingsLabel === void 0) { usUserSettingsLabel = uiLabel; }\n        if (generalUserSettingsLabel === void 0) { generalUserSettingsLabel = usUserSettingsLabel; }\n        uiMap.define(keyCode, uiLabel);\n        userSettingsUSMap.define(keyCode, usUserSettingsLabel);\n        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n    }\n    define(0 /* Unknown */, 'unknown');\n    define(1 /* Backspace */, 'Backspace');\n    define(2 /* Tab */, 'Tab');\n    define(3 /* Enter */, 'Enter');\n    define(4 /* Shift */, 'Shift');\n    define(5 /* Ctrl */, 'Ctrl');\n    define(6 /* Alt */, 'Alt');\n    define(7 /* PauseBreak */, 'PauseBreak');\n    define(8 /* CapsLock */, 'CapsLock');\n    define(9 /* Escape */, 'Escape');\n    define(10 /* Space */, 'Space');\n    define(11 /* PageUp */, 'PageUp');\n    define(12 /* PageDown */, 'PageDown');\n    define(13 /* End */, 'End');\n    define(14 /* Home */, 'Home');\n    define(15 /* LeftArrow */, 'LeftArrow', 'Left');\n    define(16 /* UpArrow */, 'UpArrow', 'Up');\n    define(17 /* RightArrow */, 'RightArrow', 'Right');\n    define(18 /* DownArrow */, 'DownArrow', 'Down');\n    define(19 /* Insert */, 'Insert');\n    define(20 /* Delete */, 'Delete');\n    define(21 /* KEY_0 */, '0');\n    define(22 /* KEY_1 */, '1');\n    define(23 /* KEY_2 */, '2');\n    define(24 /* KEY_3 */, '3');\n    define(25 /* KEY_4 */, '4');\n    define(26 /* KEY_5 */, '5');\n    define(27 /* KEY_6 */, '6');\n    define(28 /* KEY_7 */, '7');\n    define(29 /* KEY_8 */, '8');\n    define(30 /* KEY_9 */, '9');\n    define(31 /* KEY_A */, 'A');\n    define(32 /* KEY_B */, 'B');\n    define(33 /* KEY_C */, 'C');\n    define(34 /* KEY_D */, 'D');\n    define(35 /* KEY_E */, 'E');\n    define(36 /* KEY_F */, 'F');\n    define(37 /* KEY_G */, 'G');\n    define(38 /* KEY_H */, 'H');\n    define(39 /* KEY_I */, 'I');\n    define(40 /* KEY_J */, 'J');\n    define(41 /* KEY_K */, 'K');\n    define(42 /* KEY_L */, 'L');\n    define(43 /* KEY_M */, 'M');\n    define(44 /* KEY_N */, 'N');\n    define(45 /* KEY_O */, 'O');\n    define(46 /* KEY_P */, 'P');\n    define(47 /* KEY_Q */, 'Q');\n    define(48 /* KEY_R */, 'R');\n    define(49 /* KEY_S */, 'S');\n    define(50 /* KEY_T */, 'T');\n    define(51 /* KEY_U */, 'U');\n    define(52 /* KEY_V */, 'V');\n    define(53 /* KEY_W */, 'W');\n    define(54 /* KEY_X */, 'X');\n    define(55 /* KEY_Y */, 'Y');\n    define(56 /* KEY_Z */, 'Z');\n    define(57 /* Meta */, 'Meta');\n    define(58 /* ContextMenu */, 'ContextMenu');\n    define(59 /* F1 */, 'F1');\n    define(60 /* F2 */, 'F2');\n    define(61 /* F3 */, 'F3');\n    define(62 /* F4 */, 'F4');\n    define(63 /* F5 */, 'F5');\n    define(64 /* F6 */, 'F6');\n    define(65 /* F7 */, 'F7');\n    define(66 /* F8 */, 'F8');\n    define(67 /* F9 */, 'F9');\n    define(68 /* F10 */, 'F10');\n    define(69 /* F11 */, 'F11');\n    define(70 /* F12 */, 'F12');\n    define(71 /* F13 */, 'F13');\n    define(72 /* F14 */, 'F14');\n    define(73 /* F15 */, 'F15');\n    define(74 /* F16 */, 'F16');\n    define(75 /* F17 */, 'F17');\n    define(76 /* F18 */, 'F18');\n    define(77 /* F19 */, 'F19');\n    define(78 /* NumLock */, 'NumLock');\n    define(79 /* ScrollLock */, 'ScrollLock');\n    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\n    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\n    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\n    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\n    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\n    define(85 /* US_SLASH */, '/', '/', 'OEM_2');\n    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\n    define(110 /* ABNT_C1 */, 'ABNT_C1');\n    define(111 /* ABNT_C2 */, 'ABNT_C2');\n    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\n    define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\n    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\n    define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\n    define(91 /* OEM_8 */, 'OEM_8');\n    define(92 /* OEM_102 */, 'OEM_102');\n    define(93 /* NUMPAD_0 */, 'NumPad0');\n    define(94 /* NUMPAD_1 */, 'NumPad1');\n    define(95 /* NUMPAD_2 */, 'NumPad2');\n    define(96 /* NUMPAD_3 */, 'NumPad3');\n    define(97 /* NUMPAD_4 */, 'NumPad4');\n    define(98 /* NUMPAD_5 */, 'NumPad5');\n    define(99 /* NUMPAD_6 */, 'NumPad6');\n    define(100 /* NUMPAD_7 */, 'NumPad7');\n    define(101 /* NUMPAD_8 */, 'NumPad8');\n    define(102 /* NUMPAD_9 */, 'NumPad9');\n    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\n    define(104 /* NUMPAD_ADD */, 'NumPad_Add');\n    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\n    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\n    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\n    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    var chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\nexport function createKeybinding(keybinding, OS) {\n    if (keybinding === 0) {\n        return null;\n    }\n    var firstPart = (keybinding & 0x0000FFFF) >>> 0;\n    var chordPart = (keybinding & 0xFFFF0000) >>> 16;\n    if (chordPart !== 0) {\n        return new ChordKeybinding([\n            createSimpleKeybinding(firstPart, OS),\n            createSimpleKeybinding(chordPart, OS)\n        ]);\n    }\n    return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n    var ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\n    var winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\n    var ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\n    var shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\n    var altKey = (keybinding & 512 /* Alt */ ? true : false);\n    var metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\n    var keyCode = (keybinding & 255 /* KeyCode */);\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\nvar SimpleKeybinding = /** @class */ (function () {\n    function SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    SimpleKeybinding.prototype.equals = function (other) {\n        return (this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    };\n    SimpleKeybinding.prototype.isModifierKey = function () {\n        return (this.keyCode === 0 /* Unknown */\n            || this.keyCode === 5 /* Ctrl */\n            || this.keyCode === 57 /* Meta */\n            || this.keyCode === 6 /* Alt */\n            || this.keyCode === 4 /* Shift */);\n    };\n    SimpleKeybinding.prototype.toChord = function () {\n        return new ChordKeybinding([this]);\n    };\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    SimpleKeybinding.prototype.isDuplicateModifierCase = function () {\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\n            || (this.altKey && this.keyCode === 6 /* Alt */)\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\n    };\n    return SimpleKeybinding;\n}());\nexport { SimpleKeybinding };\nvar ChordKeybinding = /** @class */ (function () {\n    function ChordKeybinding(parts) {\n        if (parts.length === 0) {\n            throw illegalArgument(\"parts\");\n        }\n        this.parts = parts;\n    }\n    ChordKeybinding.prototype.equals = function (other) {\n        if (other === null) {\n            return false;\n        }\n        if (this.parts.length !== other.parts.length) {\n            return false;\n        }\n        for (var i = 0; i < this.parts.length; i++) {\n            if (!this.parts[i].equals(other.parts[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    return ChordKeybinding;\n}());\nexport { ChordKeybinding };\nvar ResolvedKeybindingPart = /** @class */ (function () {\n    function ResolvedKeybindingPart(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = kbLabel;\n        this.keyAriaLabel = kbAriaLabel;\n    }\n    return ResolvedKeybindingPart;\n}());\nexport { ResolvedKeybindingPart };\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nvar ResolvedKeybinding = /** @class */ (function () {\n    function ResolvedKeybinding() {\n    }\n    return ResolvedKeybinding;\n}());\nexport { ResolvedKeybinding };\n","export function isDisposable(thing) {\n    return typeof thing.dispose === 'function'\n        && thing.dispose.length === 0;\n}\nexport function dispose(first) {\n    var rest = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        rest[_i - 1] = arguments[_i];\n    }\n    if (Array.isArray(first)) {\n        first.forEach(function (d) { return d && d.dispose(); });\n        return [];\n    }\n    else if (rest.length === 0) {\n        if (first) {\n            first.dispose();\n            return first;\n        }\n        return undefined;\n    }\n    else {\n        dispose(first);\n        dispose(rest);\n        return [];\n    }\n}\nexport function combinedDisposable(disposables) {\n    return { dispose: function () { return dispose(disposables); } };\n}\nexport function toDisposable(fn) {\n    return { dispose: function () { fn(); } };\n}\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        this._toDispose = [];\n        this._lifecycle_disposable_isDisposed = false;\n    }\n    Disposable.prototype.dispose = function () {\n        this._lifecycle_disposable_isDisposed = true;\n        this._toDispose = dispose(this._toDispose);\n    };\n    Disposable.prototype._register = function (t) {\n        if (this._lifecycle_disposable_isDisposed) {\n            console.warn('Registering disposable on object that has already been disposed.');\n            t.dispose();\n        }\n        else {\n            this._toDispose.push(t);\n        }\n        return t;\n    };\n    Disposable.None = Object.freeze({ dispose: function () { } });\n    return Disposable;\n}());\nexport { Disposable };\nvar ImmortalReference = /** @class */ (function () {\n    function ImmortalReference(object) {\n        this.object = object;\n    }\n    ImmortalReference.prototype.dispose = function () { };\n    return ImmortalReference;\n}());\nexport { ImmortalReference };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { FIN } from './iterator.js';\nvar Node = /** @class */ (function () {\n    function Node(element) {\n        this.element = element;\n    }\n    return Node;\n}());\nvar LinkedList = /** @class */ (function () {\n    function LinkedList() {\n        this._size = 0;\n    }\n    Object.defineProperty(LinkedList.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LinkedList.prototype.isEmpty = function () {\n        return !this._first;\n    };\n    LinkedList.prototype.unshift = function (element) {\n        return this._insert(element, false);\n    };\n    LinkedList.prototype.push = function (element) {\n        return this._insert(element, true);\n    };\n    LinkedList.prototype._insert = function (element, atTheEnd) {\n        var newNode = new Node(element);\n        if (!this._first) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            var oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            var oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        return this._remove.bind(this, newNode);\n    };\n    LinkedList.prototype.shift = function () {\n        if (!this._first) {\n            return undefined;\n        }\n        else {\n            var res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    };\n    LinkedList.prototype._remove = function (node) {\n        var candidate = this._first;\n        while (candidate instanceof Node) {\n            if (candidate !== node) {\n                candidate = candidate.next;\n                continue;\n            }\n            if (candidate.prev && candidate.next) {\n                // middle\n                var anchor = candidate.prev;\n                anchor.next = candidate.next;\n                candidate.next.prev = anchor;\n            }\n            else if (!candidate.prev && !candidate.next) {\n                // only node\n                this._first = undefined;\n                this._last = undefined;\n            }\n            else if (!candidate.next) {\n                // last\n                this._last = this._last.prev;\n                this._last.next = undefined;\n            }\n            else if (!candidate.prev) {\n                // first\n                this._first = this._first.next;\n                this._first.prev = undefined;\n            }\n            // done\n            this._size -= 1;\n            break;\n        }\n    };\n    LinkedList.prototype.iterator = function () {\n        var element;\n        var node = this._first;\n        return {\n            next: function () {\n                if (!node) {\n                    return FIN;\n                }\n                if (!element) {\n                    element = { done: false, value: node.element };\n                }\n                else {\n                    element.value = node.element;\n                }\n                node = node.next;\n                return element;\n            }\n        };\n    };\n    return LinkedList;\n}());\nexport { LinkedList };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var LANGUAGE_DEFAULT = 'en';\nvar _isWindows = false;\nvar _isMacintosh = false;\nvar _isLinux = false;\nvar _isNative = false;\nvar _isWeb = false;\nvar _locale = undefined;\nvar _language = LANGUAGE_DEFAULT;\nvar _translationsConfigFile = undefined;\nvar isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    var userAgent = navigator.userAgent;\n    _isWindows = userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n    _isLinux = userAgent.indexOf('Linux') >= 0;\n    _isWeb = true;\n    _locale = navigator.language;\n    _language = _locale;\n}\nelse if (typeof process === 'object') {\n    _isWindows = (process.platform === 'win32');\n    _isMacintosh = (process.platform === 'darwin');\n    _isLinux = (process.platform === 'linux');\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            var nlsConfig = JSON.parse(rawNlsConfig);\n            var resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\nvar _platform = 0 /* Web */;\nif (_isNative) {\n    if (_isMacintosh) {\n        _platform = 1 /* Mac */;\n    }\n    else if (_isWindows) {\n        _platform = 3 /* Windows */;\n    }\n    else if (_isLinux) {\n        _platform = 2 /* Linux */;\n    }\n}\nexport var isWindows = _isWindows;\nexport var isMacintosh = _isMacintosh;\nexport var isLinux = _isLinux;\nexport var isNative = _isNative;\nexport var isWeb = _isWeb;\nvar _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nexport var globals = _globals;\nvar _setImmediate = null;\nexport function setImmediate(callback) {\n    if (_setImmediate === null) {\n        if (globals.setImmediate) {\n            _setImmediate = globals.setImmediate.bind(globals);\n        }\n        else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n            _setImmediate = process.nextTick.bind(process);\n        }\n        else {\n            _setImmediate = globals.setTimeout.bind(globals);\n        }\n    }\n    return _setImmediate(callback);\n}\nexport var OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * The empty string.\n */\nexport var empty = '';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n, l, char) {\n    if (char === void 0) { char = '0'; }\n    var str = '' + n;\n    var r = [str];\n    for (var i = str.length; i < l; i++) {\n        r.push(char);\n    }\n    return r.reverse().join('');\n}\nvar _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        var idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle) {\n    if (needle === void 0) { needle = ' '; }\n    var trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    var offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    var offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    if (haystack === needle) {\n        return true;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.indexOf(needle, diff) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\nexport function createRegExp(searchString, isRegex, options) {\n    if (options === void 0) { options = {}; }\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    var modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    var match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function regExpFlags(regexp) {\n    return (regexp.global ? 'g' : '')\n        + (regexp.ignoreCase ? 'i' : '')\n        + (regexp.multiline ? 'm' : '')\n        + (regexp.unicode ? 'u' : '');\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start, end) {\n    if (start === void 0) { start = 0; }\n    if (end === void 0) { end = str.length; }\n    for (var i = start; i < end; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex) {\n    if (startIndex === void 0) { startIndex = str.length - 1; }\n    for (var i = startIndex; i >= 0; i--) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nfunction isAsciiLetter(code) {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\nexport function equalsIgnoreCase(a, b) {\n    var len1 = a ? a.length : 0;\n    var len2 = b ? b.length : 0;\n    if (len1 !== len2) {\n        return false;\n    }\n    return doEqualsIgnoreCase(a, b);\n}\nfunction doEqualsIgnoreCase(a, b, stopAt) {\n    if (stopAt === void 0) { stopAt = a.length; }\n    if (typeof a !== 'string' || typeof b !== 'string') {\n        return false;\n    }\n    for (var i = 0; i < stopAt; i++) {\n        var codeA = a.charCodeAt(i);\n        var codeB = b.charCodeAt(i);\n        if (codeA === codeB) {\n            continue;\n        }\n        // a-z A-Z\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n            var diff = Math.abs(codeA - codeB);\n            if (diff !== 0 && diff !== 32) {\n                return false;\n            }\n        }\n        // Any other charcode\n        else {\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    var candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    var aLastIndex = a.length - 1;\n    var bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tlet chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tlet nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nvar CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    return CONTAINS_RTL.test(str);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nvar CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\nexport function containsEmoji(str) {\n    return CONTAINS_EMOJI.test(str);\n}\nvar IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport function containsFullWidthCharacter(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 — 2EFF   CJK Radicals Supplement\n    //          2F00 — 2FDF   Kangxi Radicals\n    //          2FF0 — 2FFF   Ideographic Description Characters\n    //          3000 — 303F   CJK Symbols and Punctuation\n    //          3040 — 309F   Hiragana\n    //          30A0 — 30FF   Katakana\n    //          3100 — 312F   Bopomofo\n    //          3130 — 318F   Hangul Compatibility Jamo\n    //          3190 — 319F   Kanbun\n    //          31A0 — 31BF   Bopomofo Extended\n    //          31F0 — 31FF   Katakana Phonetic Extensions\n    //          3200 — 32FF   Enclosed CJK Letters and Months\n    //          3300 — 33FF   CJK Compatibility\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\n    //          4E00 — 9FFF   CJK Unified Ideographs\n    //          A000 — A48F   Yi Syllables\n    //          A490 — A4CF   Yi Radicals\n    //          AC00 — D7AF   Hangul Syllables\n    // [IGNORE] D800 — DB7F   High Surrogates\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 — DFFF   Low Surrogates\n    // [IGNORE] E000 — F8FF   Private Use Area\n    //          F900 — FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 — FE0F   Variation Selectors\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 — FE6F   Small Form Variants\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 — FFFF   Specials\n    charCode = +charCode; // @perf\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n// -- UTF-8 BOM\nexport var UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nexport function safeBtoa(str) {\n    return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\nexport function repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _typeof = {\n    number: 'number',\n    string: 'string',\n    undefined: 'undefined',\n    object: 'object',\n    function: 'function'\n};\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array) {\n    if (Array.isArray) {\n        return Array.isArray(array);\n    }\n    if (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n        return true;\n    }\n    return false;\n}\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    if (typeof (str) === _typeof.string || str instanceof String) {\n        return true;\n    }\n    return false;\n}\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === _typeof.object\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    if ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return obj === true || obj === false;\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return typeof (obj) === _typeof.undefined;\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return isUndefined(obj) || obj === null;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj) {\n    if (!isObject(obj)) {\n        return false;\n    }\n    for (var key in obj) {\n        if (hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return typeof obj === _typeof.function;\n}\nexport function validateConstraints(args, constraints) {\n    var len = Math.min(args.length, constraints.length);\n    for (var i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(\"argument does not match constraint: typeof \" + constraint);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\n    }\n}\n/**\n * Creates a new object of the provided class and will call the constructor with\n * any additional argument supplied.\n */\nexport function create(ctor) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var _a;\n    if (isNativeClass(ctor)) {\n        return new ((_a = ctor).bind.apply(_a, [void 0].concat(args)))();\n    }\n    else {\n        var obj = Object.create(ctor.prototype);\n        ctor.apply(obj, args);\n        return obj;\n    }\n}\n// https://stackoverflow.com/a/32235645/1499159\nfunction isNativeClass(thing) {\n    return typeof thing === 'function'\n        && thing.hasOwnProperty('prototype')\n        && !thing.hasOwnProperty('arguments');\n}\n/**\n *\n *\n */\nexport function getAllPropertyNames(obj) {\n    var res = [];\n    var proto = Object.getPrototypeOf(obj);\n    while (Object.prototype !== proto) {\n        res = res.concat(Object.getOwnPropertyNames(proto));\n        proto = Object.getPrototypeOf(proto);\n    }\n    return res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a;\nimport { isWindows } from './platform.js';\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\nvar _singleSlashStart = /^\\//;\nvar _doubleSlashStart = /^\\/\\//;\nvar _throwOnMissingSchema = true;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme) {\n        if (_strict || _throwOnMissingSchema) {\n            throw new Error(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n        }\n        else {\n            console.warn(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n        }\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nvar _empty = '';\nvar _slash = '/';\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nvar URI = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function URI(schemeOrData, authority, path, query, fragment, _strict) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = schemeOrData || _empty;\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    URI.isUri = function (thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'function'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    };\n    Object.defineProperty(URI.prototype, \"fsPath\", {\n        // ---- filesystem path -----------------------\n        /**\n         * Returns a string representing the corresponding file system path of this URI.\n         * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n         * platform specific path separator.\n         *\n         * * Will *not* validate the path for invalid characters and semantics.\n         * * Will *not* look at the scheme of this URI.\n         * * The result shall *not* be used for display purposes but for accessing a file on disk.\n         *\n         *\n         * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n         * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n         *\n         * ```ts\n            const u = URI.parse('file://server/c$/folder/file.txt')\n            u.authority === 'server'\n            u.path === '/shares/c$/file.txt'\n            u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n        ```\n         *\n         * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n         * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n         * with URIs that represent files on disk (`file` scheme).\n         */\n        get: function () {\n            // if (this.scheme !== 'file') {\n            // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n            // }\n            return _makeFsPath(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // ---- modify to new -------------------------\n    URI.prototype.with = function (change) {\n        if (!change) {\n            return this;\n        }\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new _URI(scheme, authority, path, query, fragment);\n    };\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    URI.parse = function (value, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        var match = _regexp.exec(value);\n        if (!match) {\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new _URI(match[2] || _empty, decodeURIComponent(match[4] || _empty), decodeURIComponent(match[5] || _empty), decodeURIComponent(match[7] || _empty), decodeURIComponent(match[9] || _empty), _strict);\n    };\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    URI.file = function (path) {\n        var authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            var idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new _URI('file', authority, path, _empty, _empty);\n    };\n    URI.from = function (components) {\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n    };\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        return _asFormatted(this, skipEncoding);\n    };\n    URI.prototype.toJSON = function () {\n        return this;\n    };\n    URI.revive = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            var result = new _URI(data);\n            result._fsPath = data.fsPath;\n            result._formatted = data.external;\n            return result;\n        }\n    };\n    return URI;\n}());\nexport { URI };\n// tslint:disable-next-line:class-name\nvar _URI = /** @class */ (function (_super) {\n    __extends(_URI, _super);\n    function _URI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._formatted = null;\n        _this._fsPath = null;\n        return _this;\n    }\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\n        get: function () {\n            if (!this._fsPath) {\n                this._fsPath = _makeFsPath(this);\n            }\n            return this._fsPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    };\n    _URI.prototype.toJSON = function () {\n        var res = {\n            $mid: 1\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    };\n    return _URI;\n}(URI));\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nvar encodeTable = (_a = {},\n    _a[58 /* Colon */] = '%3A',\n    _a[47 /* Slash */] = '%2F',\n    _a[63 /* QuestionMark */] = '%3F',\n    _a[35 /* Hash */] = '%23',\n    _a[91 /* OpenSquareBracket */] = '%5B',\n    _a[93 /* CloseSquareBracket */] = '%5D',\n    _a[64 /* AtSign */] = '%40',\n    _a[33 /* ExclamationMark */] = '%21',\n    _a[36 /* DollarSign */] = '%24',\n    _a[38 /* Ampersand */] = '%26',\n    _a[39 /* SingleQuote */] = '%27',\n    _a[40 /* OpenParen */] = '%28',\n    _a[41 /* CloseParen */] = '%29',\n    _a[42 /* Asterisk */] = '%2A',\n    _a[43 /* Plus */] = '%2B',\n    _a[44 /* Comma */] = '%2C',\n    _a[59 /* Semicolon */] = '%3B',\n    _a[61 /* Equals */] = '%3D',\n    _a[32 /* Space */] = '%20',\n    _a);\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    var res = undefined;\n    var nativeEncodePos = -1;\n    for (var pos = 0; pos < uriComponent.length; pos++) {\n        var code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            var escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    var res = undefined;\n    for (var pos = 0; pos < path.length; pos++) {\n        var code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri) {\n    var value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = \"//\" + uri.authority + uri.path;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        // windows drive letter: file:///c:/far/boo\n        value = uri.path[1].toLowerCase() + uri.path.substr(2);\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    var encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    var res = '';\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        var idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            var userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            var code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = \"/\" + String.fromCharCode(code + 32) + \":\" + path.substr(3); // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            var code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = String.fromCharCode(code + 32) + \":\" + path.substr(2); // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Disposable } from '../lifecycle.js';\nimport { isWeb } from '../platform.js';\nimport { getAllPropertyNames } from '../types.js';\nvar INITIALIZE = '$initialize';\nvar webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nvar SimpleWorkerProtocol = /** @class */ (function () {\n    function SimpleWorkerProtocol(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n    }\n    SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\n        this._workerId = workerId;\n    };\n    SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\n        var _this = this;\n        var req = String(++this._lastSentReq);\n        return new Promise(function (resolve, reject) {\n            _this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            _this._send({\n                vsWorker: _this._workerId,\n                req: req,\n                method: method,\n                args: args\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype.handleMessage = function (serializedMessage) {\n        var message;\n        try {\n            message = JSON.parse(serializedMessage);\n        }\n        catch (e) {\n            // nothing\n            return;\n        }\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    };\n    SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\n        var _this = this;\n        if (msg.seq) {\n            var replyMessage = msg;\n            if (!this._pendingReplies[replyMessage.seq]) {\n                console.warn('Got reply to unknown seq');\n                return;\n            }\n            var reply = this._pendingReplies[replyMessage.seq];\n            delete this._pendingReplies[replyMessage.seq];\n            if (replyMessage.err) {\n                var err = replyMessage.err;\n                if (replyMessage.err.$isError) {\n                    err = new Error();\n                    err.name = replyMessage.err.name;\n                    err.message = replyMessage.err.message;\n                    err.stack = replyMessage.err.stack;\n                }\n                reply.reject(err);\n                return;\n            }\n            reply.resolve(replyMessage.res);\n            return;\n        }\n        var requestMessage = msg;\n        var req = requestMessage.req;\n        var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then(function (r) {\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: r,\n                err: undefined\n            });\n        }, function (e) {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: undefined,\n                err: transformErrorForSerialization(e)\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype._send = function (msg) {\n        var strMsg = JSON.stringify(msg);\n        // console.log('SENDING: ' + strMsg);\n        this._handler.sendMessage(strMsg);\n    };\n    return SimpleWorkerProtocol;\n}());\n/**\n * Main thread side\n */\nvar SimpleWorkerClient = /** @class */ (function (_super) {\n    __extends(SimpleWorkerClient, _super);\n    function SimpleWorkerClient(workerFactory, moduleId) {\n        var _this = _super.call(this) || this;\n        var lazyProxyReject = null;\n        _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\n            _this._protocol.handleMessage(msg);\n        }, function (err) {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            if (lazyProxyReject) {\n                lazyProxyReject(err);\n            }\n        }));\n        _this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                _this._worker.postMessage(msg);\n            },\n            handleMessage: function (method, args) {\n                // Intentionally not supporting worker -> main requests\n                return Promise.resolve(null);\n            }\n        });\n        _this._protocol.setWorkerId(_this._worker.getId());\n        // Gather loader configuration\n        var loaderConfiguration = null;\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = self.require.getConfig();\n        }\n        else if (typeof self.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = self.requirejs.s.contexts._.config;\n        }\n        // Send initialize message\n        _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [\n            _this._worker.getId(),\n            moduleId,\n            loaderConfiguration\n        ]);\n        _this._lazyProxy = new Promise(function (resolve, reject) {\n            lazyProxyReject = reject;\n            _this._onModuleLoaded.then(function (availableMethods) {\n                var proxy = {};\n                for (var _i = 0, availableMethods_1 = availableMethods; _i < availableMethods_1.length; _i++) {\n                    var methodName = availableMethods_1[_i];\n                    proxy[methodName] = createProxyMethod(methodName, proxyMethodRequest);\n                }\n                resolve(proxy);\n            }, function (e) {\n                reject(e);\n                _this._onError('Worker failed to load ' + moduleId, e);\n            });\n        });\n        // Create proxy to loaded code\n        var proxyMethodRequest = function (method, args) {\n            return _this._request(method, args);\n        };\n        var createProxyMethod = function (method, proxyMethodRequest) {\n            return function () {\n                var args = Array.prototype.slice.call(arguments, 0);\n                return proxyMethodRequest(method, args);\n            };\n        };\n        return _this;\n    }\n    SimpleWorkerClient.prototype.getProxyObject = function () {\n        return this._lazyProxy;\n    };\n    SimpleWorkerClient.prototype._request = function (method, args) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._onModuleLoaded.then(function () {\n                _this._protocol.sendMessage(method, args).then(resolve, reject);\n            }, reject);\n        });\n    };\n    SimpleWorkerClient.prototype._onError = function (message, error) {\n        console.error(message);\n        console.info(error);\n    };\n    return SimpleWorkerClient;\n}(Disposable));\nexport { SimpleWorkerClient };\n/**\n * Worker side\n */\nvar SimpleWorkerServer = /** @class */ (function () {\n    function SimpleWorkerServer(postSerializedMessage, requestHandler) {\n        var _this = this;\n        this._requestHandler = requestHandler;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                postSerializedMessage(msg);\n            },\n            handleMessage: function (method, args) { return _this._handleMessage(method, args); }\n        });\n    }\n    SimpleWorkerServer.prototype.onmessage = function (msg) {\n        this._protocol.handleMessage(msg);\n    };\n    SimpleWorkerServer.prototype._handleMessage = function (method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    };\n    SimpleWorkerServer.prototype.initialize = function (workerId, moduleId, loaderConfig) {\n        var _this = this;\n        this._protocol.setWorkerId(workerId);\n        if (this._requestHandler) {\n            // static request handler\n            var methods = [];\n            for (var _i = 0, _a = getAllPropertyNames(this._requestHandler); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (typeof this._requestHandler[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return Promise.resolve(methods);\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            self.require.config(loaderConfig);\n        }\n        return new Promise(function (resolve, reject) {\n            // Use the global require to be sure to get the global config\n            self.require([moduleId], function () {\n                var result = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    result[_i] = arguments[_i];\n                }\n                var handlerModule = result[0];\n                _this._requestHandler = handlerModule.create();\n                if (!_this._requestHandler) {\n                    reject(new Error(\"No RequestHandler!\"));\n                    return;\n                }\n                var methods = [];\n                for (var _a = 0, _b = getAllPropertyNames(_this._requestHandler); _a < _b.length; _a++) {\n                    var prop = _b[_a];\n                    if (typeof _this._requestHandler[prop] === 'function') {\n                        methods.push(prop);\n                    }\n                }\n                resolve(methods);\n            }, reject);\n        });\n    };\n    return SimpleWorkerServer;\n}());\nexport { SimpleWorkerServer };\n/**\n * Called on the worker side\n */\nexport function create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint8 } from './uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nvar CharacterClassifier = /** @class */ (function () {\n    function CharacterClassifier(_defaultValue) {\n        var defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    CharacterClassifier._createAsciiMap = function (defaultValue) {\n        var asciiMap = new Uint8Array(256);\n        for (var i = 0; i < 256; i++) {\n            asciiMap[i] = defaultValue;\n        }\n        return asciiMap;\n    };\n    CharacterClassifier.prototype.set = function (charCode, _value) {\n        var value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    };\n    CharacterClassifier.prototype.get = function (charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    };\n    return CharacterClassifier;\n}());\nexport { CharacterClassifier };\nvar CharacterSet = /** @class */ (function () {\n    function CharacterSet() {\n        this._actual = new CharacterClassifier(0 /* False */);\n    }\n    CharacterSet.prototype.add = function (charCode) {\n        this._actual.set(charCode, 1 /* True */);\n    };\n    CharacterSet.prototype.has = function (charCode) {\n        return (this._actual.get(charCode) === 1 /* True */);\n    };\n    return CharacterSet;\n}());\nexport { CharacterSet };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * A position in the editor.\n */\nvar Position = /** @class */ (function () {\n    function Position(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Create a new postion from this position.\n     *\n     * @param newLineNumber new line number\n     * @param newColumn new column\n     */\n    Position.prototype.with = function (newLineNumber, newColumn) {\n        if (newLineNumber === void 0) { newLineNumber = this.lineNumber; }\n        if (newColumn === void 0) { newColumn = this.column; }\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return new Position(newLineNumber, newColumn);\n        }\n    };\n    /**\n     * Derive a new position from this position.\n     *\n     * @param deltaLineNumber line number delta\n     * @param deltaColumn column delta\n     */\n    Position.prototype.delta = function (deltaLineNumber, deltaColumn) {\n        if (deltaLineNumber === void 0) { deltaLineNumber = 0; }\n        if (deltaColumn === void 0) { deltaColumn = 0; }\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    };\n    /**\n     * Test if this position equals other position\n     */\n    Position.prototype.equals = function (other) {\n        return Position.equals(this, other);\n    };\n    /**\n     * Test if position `a` equals position `b`\n     */\n    Position.equals = function (a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.prototype.isBefore = function (other) {\n        return Position.isBefore(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.isBefore = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.prototype.isBeforeOrEqual = function (other) {\n        return Position.isBeforeOrEqual(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.isBeforeOrEqual = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    };\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    Position.compare = function (a, b) {\n        var aLineNumber = a.lineNumber | 0;\n        var bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            var aColumn = a.column | 0;\n            var bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    };\n    /**\n     * Clone this position.\n     */\n    Position.prototype.clone = function () {\n        return new Position(this.lineNumber, this.column);\n    };\n    /**\n     * Convert to a human-readable representation.\n     */\n    Position.prototype.toString = function () {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    };\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    Position.lift = function (pos) {\n        return new Position(pos.lineNumber, pos.column);\n    };\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    Position.isIPosition = function (obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    };\n    return Position;\n}());\nexport { Position };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nvar Range = /** @class */ (function () {\n    function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    Range.prototype.isEmpty = function () {\n        return Range.isEmpty(this);\n    };\n    /**\n     * Test if `range` is empty.\n     */\n    Range.isEmpty = function (range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    };\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    Range.prototype.containsPosition = function (position) {\n        return Range.containsPosition(this, position);\n    };\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    Range.containsPosition = function (range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    Range.prototype.containsRange = function (range) {\n        return Range.containsRange(this, range);\n    };\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    Range.containsRange = function (range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.prototype.plusRange = function (range) {\n        return Range.plusRange(this, range);\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.plusRange = function (a, b) {\n        var startLineNumber;\n        var startColumn;\n        var endLineNumber;\n        var endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.prototype.intersectRanges = function (range) {\n        return Range.intersectRanges(this, range);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.intersectRanges = function (a, b) {\n        var resultStartLineNumber = a.startLineNumber;\n        var resultStartColumn = a.startColumn;\n        var resultEndLineNumber = a.endLineNumber;\n        var resultEndColumn = a.endColumn;\n        var otherStartLineNumber = b.startLineNumber;\n        var otherStartColumn = b.startColumn;\n        var otherEndLineNumber = b.endLineNumber;\n        var otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    };\n    /**\n     * Test if this range equals other.\n     */\n    Range.prototype.equalsRange = function (other) {\n        return Range.equalsRange(this, other);\n    };\n    /**\n     * Test if range `a` equals `b`.\n     */\n    Range.equalsRange = function (a, b) {\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    };\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    Range.prototype.getEndPosition = function () {\n        return new Position(this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    Range.prototype.getStartPosition = function () {\n        return new Position(this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Transform to a user presentable string representation.\n     */\n    Range.prototype.toString = function () {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    };\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.prototype.collapseToStart = function () {\n        return Range.collapseToStart(this);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.collapseToStart = function (range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    };\n    // ---\n    Range.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    Range.lift = function (range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    };\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    Range.isIRange = function (obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    };\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    Range.areIntersectingOrTouching = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n     */\n    Range.areIntersecting = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    Range.compareRangesUsingStarts = function (a, b) {\n        if (a && b) {\n            var aStartLineNumber = a.startLineNumber | 0;\n            var bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                var aStartColumn = a.startColumn | 0;\n                var bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    var aEndLineNumber = a.endLineNumber | 0;\n                    var bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        var aEndColumn = a.endColumn | 0;\n                        var bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        var aExists = (a ? 1 : 0);\n        var bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    Range.compareRangesUsingEnds = function (a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    };\n    /**\n     * Test if the range spans multiple lines.\n     */\n    Range.spansMultipleLines = function (range) {\n        return range.endLineNumber > range.startLineNumber;\n    };\n    return Range;\n}());\nexport { Range };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nvar Selection = /** @class */ (function (_super) {\n    __extends(Selection, _super);\n    function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        var _this = _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) || this;\n        _this.selectionStartLineNumber = selectionStartLineNumber;\n        _this.selectionStartColumn = selectionStartColumn;\n        _this.positionLineNumber = positionLineNumber;\n        _this.positionColumn = positionColumn;\n        return _this;\n    }\n    /**\n     * Clone this selection.\n     */\n    Selection.prototype.clone = function () {\n        return new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Transform to a human-readable representation.\n     */\n    Selection.prototype.toString = function () {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    };\n    /**\n     * Test if equals other selection.\n     */\n    Selection.prototype.equalsSelection = function (other) {\n        return (Selection.selectionsEqual(this, other));\n    };\n    /**\n     * Test if the two selections are equal.\n     */\n    Selection.selectionsEqual = function (a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    };\n    /**\n     * Get directions (LTR or RTL).\n     */\n    Selection.prototype.getDirection = function () {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 /* LTR */;\n        }\n        return 1 /* RTL */;\n    };\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.getPosition = function () {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    };\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    Selection.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    Selection.liftSelection = function (sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    };\n    /**\n     * `a` equals `b`.\n     */\n    Selection.selectionsArrEqual = function (a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    Selection.isISelection = function (obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    };\n    /**\n     * Create with a direction.\n     */\n    Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    };\n    return Selection;\n}(Range));\nexport { Selection };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Token = /** @class */ (function () {\n    function Token(offset, type, language) {\n        this.offset = offset | 0; // @perf\n        this.type = type;\n        this.language = language;\n    }\n    Token.prototype.toString = function () {\n        return '(' + this.offset + ', ' + this.type + ')';\n    };\n    return Token;\n}());\nexport { Token };\nvar TokenizationResult = /** @class */ (function () {\n    function TokenizationResult(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult;\n}());\nexport { TokenizationResult };\nvar TokenizationResult2 = /** @class */ (function () {\n    function TokenizationResult2(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult2;\n}());\nexport { TokenizationResult2 };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Uint8Matrix = /** @class */ (function () {\n    function Uint8Matrix(rows, cols, defaultValue) {\n        var data = new Uint8Array(rows * cols);\n        for (var i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    Uint8Matrix.prototype.get = function (row, col) {\n        return this._data[row * this.cols + col];\n    };\n    Uint8Matrix.prototype.set = function (row, col, value) {\n        this._data[row * this.cols + col] = value;\n    };\n    return Uint8Matrix;\n}());\nexport { Uint8Matrix };\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* MAX_UINT_8 */) {\n        return 255 /* MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* MAX_UINT_32 */) {\n        return 4294967295 /* MAX_UINT_32 */;\n    }\n    return v | 0;\n}\nexport function toUint32Array(arr) {\n    var len = arr.length;\n    var r = new Uint32Array(len);\n    for (var i = 0; i < len; i++) {\n        r[i] = toUint32(arr[i]);\n    }\n    return r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport * as strings from '../../../base/common/strings.js';\nvar MAXIMUM_RUN_TIME = 5000; // 5 seconds\nvar MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    var diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nvar LineMarkerSequence = /** @class */ (function () {\n    function LineMarkerSequence(lines) {\n        var startColumns = [];\n        var endColumns = [];\n        for (var i = 0, length_1 = lines.length; i < length_1; i++) {\n            startColumns[i] = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\n        }\n        this._lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    LineMarkerSequence.prototype.getLength = function () {\n        return this._lines.length;\n    };\n    LineMarkerSequence.prototype.getElementAtIndex = function (i) {\n        return this._lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n    };\n    LineMarkerSequence.prototype.getStartLineNumber = function (i) {\n        return i + 1;\n    };\n    LineMarkerSequence.prototype.getEndLineNumber = function (i) {\n        return i + 1;\n    };\n    LineMarkerSequence._getFirstNonBlankColumn = function (txt, defaultValue) {\n        var r = strings.firstNonWhitespaceIndex(txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 1;\n    };\n    LineMarkerSequence._getLastNonBlankColumn = function (txt, defaultValue) {\n        var r = strings.lastNonWhitespaceIndex(txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 2;\n    };\n    LineMarkerSequence.prototype.getCharSequence = function (shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        var charCodes = [];\n        var lineNumbers = [];\n        var columns = [];\n        var len = 0;\n        for (var index = startIndex; index <= endIndex; index++) {\n            var lineContent = this._lines[index];\n            var startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            var endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (var col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n        }\n        return new CharSequence(charCodes, lineNumbers, columns);\n    };\n    return LineMarkerSequence;\n}());\nvar CharSequence = /** @class */ (function () {\n    function CharSequence(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    CharSequence.prototype.getLength = function () {\n        return this._charCodes.length;\n    };\n    CharSequence.prototype.getElementAtIndex = function (i) {\n        return this._charCodes[i];\n    };\n    CharSequence.prototype.getStartLineNumber = function (i) {\n        return this._lineNumbers[i];\n    };\n    CharSequence.prototype.getStartColumn = function (i) {\n        return this._columns[i];\n    };\n    CharSequence.prototype.getEndLineNumber = function (i) {\n        return this._lineNumbers[i];\n    };\n    CharSequence.prototype.getEndColumn = function (i) {\n        return this._columns[i] + 1;\n    };\n    return CharSequence;\n}());\nvar CharChange = /** @class */ (function () {\n    function CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    CharChange.createFromDiffChange = function (diffChange, originalCharSequence, modifiedCharSequence) {\n        var originalStartLineNumber;\n        var originalStartColumn;\n        var originalEndLineNumber;\n        var originalEndColumn;\n        var modifiedStartLineNumber;\n        var modifiedStartColumn;\n        var modifiedEndLineNumber;\n        var modifiedEndColumn;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = 0;\n            originalStartColumn = 0;\n            originalEndLineNumber = 0;\n            originalEndColumn = 0;\n        }\n        else {\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = 0;\n            modifiedStartColumn = 0;\n            modifiedEndLineNumber = 0;\n            modifiedEndColumn = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    };\n    return CharChange;\n}());\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    var result = [rawChanges[0]];\n    var prevChange = result[0];\n    for (var i = 1, len = rawChanges.length; i < len; i++) {\n        var currChange = rawChanges[i];\n        var originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        var modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        var matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nvar LineChange = /** @class */ (function () {\n    function LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    LineChange.createFromDiffResult = function (shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueProcessingPredicate, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        var originalStartLineNumber;\n        var originalEndLineNumber;\n        var modifiedStartLineNumber;\n        var modifiedEndLineNumber;\n        var charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\n            var originalCharSequence = originalLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            var modifiedCharSequence = modifiedLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            var rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate, true);\n            if (shouldPostProcessCharChanges) {\n                rawChanges = postProcessCharChanges(rawChanges);\n            }\n            charChanges = [];\n            for (var i = 0, length_2 = rawChanges.length; i < length_2; i++) {\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    };\n    return LineChange;\n}());\nvar DiffComputer = /** @class */ (function () {\n    function DiffComputer(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.maximumRunTimeMs = MAXIMUM_RUN_TIME;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineMarkerSequence(originalLines);\n        this.modified = new LineMarkerSequence(modifiedLines);\n    }\n    DiffComputer.prototype.computeDiff = function () {\n        if (this.original.getLength() === 1 && this.original.getElementAtIndex(0).length === 0) {\n            // empty original => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: 1,\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: this.modified.getLength(),\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        if (this.modified.getLength() === 1 && this.modified.getElementAtIndex(0).length === 0) {\n            // empty modified => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: this.original.getLength(),\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: 1,\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        this.computationStartTime = (new Date()).getTime();\n        var rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldMakePrettyDiff);\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            var lineChanges = [];\n            for (var i = 0, length_3 = rawChanges.length; i < length_3; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return lineChanges;\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        var result = [];\n        var originalLineIndex = 0;\n        var modifiedLineIndex = 0;\n        for (var i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            var nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            var originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            var modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                var originalLine = this.originalLines[originalLineIndex];\n                var modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        var originalStartColumn = LineMarkerSequence._getFirstNonBlankColumn(originalLine, 1);\n                        var modifiedStartColumn = LineMarkerSequence._getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            var originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            var modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        var originalEndColumn = LineMarkerSequence._getLastNonBlankColumn(originalLine, 1);\n                        var modifiedEndColumn = LineMarkerSequence._getLastNonBlankColumn(modifiedLine, 1);\n                        var originalMaxColumn = originalLine.length + 1;\n                        var modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            var originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            var modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return result;\n    };\n    DiffComputer.prototype._pushTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        var charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n    };\n    DiffComputer.prototype._mergeTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        var len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        var prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        return false;\n    };\n    DiffComputer.prototype._continueProcessingPredicate = function () {\n        if (this.maximumRunTimeMs === 0) {\n            return true;\n        }\n        var now = (new Date()).getTime();\n        return now - this.computationStartTime < this.maximumRunTimeMs;\n    };\n    return DiffComputer;\n}());\nexport { DiffComputer };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\nvar MirrorTextModel = /** @class */ (function () {\n    function MirrorTextModel(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n    }\n    MirrorTextModel.prototype.dispose = function () {\n        this._lines.length = 0;\n    };\n    MirrorTextModel.prototype.getText = function () {\n        return this._lines.join(this._eol);\n    };\n    MirrorTextModel.prototype.onEvents = function (e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        var changes = e.changes;\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n            var change = changes_1[_i];\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n    };\n    MirrorTextModel.prototype._ensureLineStarts = function () {\n        if (!this._lineStarts) {\n            var eolLength = this._eol.length;\n            var linesLength = this._lines.length;\n            var lineStartValues = new Uint32Array(linesLength);\n            for (var i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    };\n    /**\n     * All changes to a line's text go through this method\n     */\n    MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    };\n    MirrorTextModel.prototype._acceptDeleteRange = function (range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    };\n    MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        var newLengths = new Uint32Array(insertLines.length - 1);\n        for (var i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    };\n    return MirrorTextModel;\n}());\nexport { MirrorTextModel };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords) {\n    if (allowInWords === void 0) { allowInWords = ''; }\n    var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (var _i = 0, USUAL_WORD_SEPARATORS_1 = USUAL_WORD_SEPARATORS; _i < USUAL_WORD_SEPARATORS_1.length; _i++) {\n        var sep = USUAL_WORD_SEPARATORS_1[_i];\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport var DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    var result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            var flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nfunction getWordAtPosFast(column, wordDefinition, text, textOffset) {\n    // find whitespace enclosed text around column and match from there\n    var pos = column - 1 - textOffset;\n    var start = text.lastIndexOf(' ', pos - 1) + 1;\n    wordDefinition.lastIndex = start;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        var matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + matchIndex,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nfunction getWordAtPosSlow(column, wordDefinition, text, textOffset) {\n    // matches all words starting at the beginning\n    // of the input until it finds a match that encloses\n    // the desired column. slow but correct\n    var pos = column - 1 - textOffset;\n    wordDefinition.lastIndex = 0;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        var matchIndex = match.index || 0;\n        if (matchIndex > pos) {\n            // |nW -> matched only after the pos\n            return null;\n        }\n        else if (wordDefinition.lastIndex >= pos) {\n            // W|W -> match encloses pos\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + matchIndex,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nexport function getWordAtText(column, wordDefinition, text, textOffset) {\n    // if `words` can contain whitespace character we have to use the slow variant\n    // otherwise we use the fast variant of finding a word\n    wordDefinition.lastIndex = 0;\n    var match = wordDefinition.exec(text);\n    if (!match) {\n        return null;\n    }\n    // todo@joh the `match` could already be the (first) word\n    var ret = match[0].indexOf(' ') >= 0\n        // did match a word which contains a space character -> use slow word find\n        ? getWordAtPosSlow(column, wordDefinition, text, textOffset)\n        // sane word definition -> use fast word find\n        : getWordAtPosFast(column, wordDefinition, text, textOffset);\n    // both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n    // in an undefined state and to not confuse other users of the wordDefinition\n    // we reset the lastIndex\n    wordDefinition.lastIndex = 0;\n    return ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nimport { Uint8Matrix } from '../core/uint.js';\nvar StateMachine = /** @class */ (function () {\n    function StateMachine(edges) {\n        var maxCharCode = 0;\n        var maxState = 0 /* Invalid */;\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _a = edges[i], from = _a[0], chCode = _a[1], to = _a[2];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        var states = new Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _b = edges[i], from = _b[0], chCode = _b[1], to = _b[2];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    StateMachine.prototype.nextState = function (currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    };\n    return StateMachine;\n}());\nexport { StateMachine };\n// State machine for http:// or https:// or file://\nvar _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* Start */, 104 /* h */, 2 /* H */],\n            [1 /* Start */, 72 /* H */, 2 /* H */],\n            [1 /* Start */, 102 /* f */, 6 /* F */],\n            [1 /* Start */, 70 /* F */, 6 /* F */],\n            [2 /* H */, 116 /* t */, 3 /* HT */],\n            [2 /* H */, 84 /* T */, 3 /* HT */],\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\n            [6 /* F */, 105 /* i */, 7 /* FI */],\n            [6 /* F */, 73 /* I */, 7 /* FI */],\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\n        ]);\n    }\n    return _stateMachine;\n}\nvar _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier(0 /* None */);\n        var FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n        for (var i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\n        }\n        var CANNOT_END_WITH_CHARACTERS = '.,;';\n        for (var i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nvar LinkComputer = /** @class */ (function () {\n    function LinkComputer() {\n    }\n    LinkComputer._createLink = function (classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        var lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            var chCode = line.charCodeAt(lastIncludedCharIndex);\n            var chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            var charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            var lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    };\n    LinkComputer.computeLinks = function (model, stateMachine) {\n        if (stateMachine === void 0) { stateMachine = getStateMachine(); }\n        var classifier = getClassifier();\n        var result = [];\n        for (var i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            var line = model.getLineContent(i);\n            var len = line.length;\n            var j = 0;\n            var linkBeginIndex = 0;\n            var linkBeginChCode = 0;\n            var state = 1 /* Start */;\n            var hasOpenParens = false;\n            var hasOpenSquareBracket = false;\n            var hasOpenCurlyBracket = false;\n            while (j < len) {\n                var resetStateMachine = false;\n                var chCode = line.charCodeAt(j);\n                if (state === 13 /* Accept */) {\n                    var chClass = void 0;\n                    switch (chCode) {\n                        case 40 /* OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 41 /* CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 91 /* OpenSquareBracket */:\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 93 /* CloseSquareBracket */:\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 123 /* OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 125 /* CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n                        case 39 /* SingleQuote */:\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 34 /* DoubleQuote */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 96 /* BackTick */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* End */) {\n                    var chClass = void 0;\n                    if (chCode === 91 /* OpenSquareBracket */) {\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                        hasOpenSquareBracket = true;\n                        chClass = 0 /* None */;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    };\n    return LinkComputer;\n}());\nexport { LinkComputer };\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar BasicInplaceReplace = /** @class */ (function () {\n    function BasicInplaceReplace() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    BasicInplaceReplace.prototype.navigateValueSet = function (range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            var result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            var result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.doNavigateValueSet = function (text, up) {\n        var numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    };\n    BasicInplaceReplace.prototype.numberReplace = function (value, up) {\n        var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        var n1 = Number(value);\n        var n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.textReplace = function (value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    };\n    BasicInplaceReplace.prototype.valueSetsReplace = function (valueSets, value, up) {\n        var result = null;\n        for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    };\n    BasicInplaceReplace.prototype.valueSetReplace = function (valueSet, value, up) {\n        var idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    };\n    BasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n    return BasicInplaceReplace;\n}());\nexport { BasicInplaceReplace };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { mergeSort } from '../../../base/common/arrays.js';\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { FIN } from '../../../base/common/iterator.js';\nimport { globals } from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { DiffComputer } from '../diff/diffComputer.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../model/wordHelper.js';\nimport { computeLinks } from '../modes/linkComputer.js';\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\nimport { getAllPropertyNames } from '../../../base/common/types.js';\n/**\n * @internal\n */\nvar MirrorModel = /** @class */ (function (_super) {\n    __extends(MirrorModel, _super);\n    function MirrorModel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MirrorModel.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"version\", {\n        get: function () {\n            return this._versionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"eol\", {\n        get: function () {\n            return this._eol;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MirrorModel.prototype.getValue = function () {\n        return this.getText();\n    };\n    MirrorModel.prototype.getLinesContent = function () {\n        return this._lines.slice(0);\n    };\n    MirrorModel.prototype.getLineCount = function () {\n        return this._lines.length;\n    };\n    MirrorModel.prototype.getLineContent = function (lineNumber) {\n        return this._lines[lineNumber - 1];\n    };\n    MirrorModel.prototype.getWordAtPosition = function (position, wordDefinition) {\n        var wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    };\n    MirrorModel.prototype.getWordUntilPosition = function (position, wordDefinition) {\n        var wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n        if (!wordAtPosition) {\n            return {\n                word: '',\n                startColumn: position.column,\n                endColumn: position.column\n            };\n        }\n        return {\n            word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n            startColumn: wordAtPosition.startColumn,\n            endColumn: position.column\n        };\n    };\n    MirrorModel.prototype.createWordIterator = function (wordDefinition) {\n        var _this = this;\n        var obj;\n        var lineNumber = 0;\n        var lineText;\n        var wordRangesIdx = 0;\n        var wordRanges = [];\n        var next = function () {\n            if (wordRangesIdx < wordRanges.length) {\n                var value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                wordRangesIdx += 1;\n                if (!obj) {\n                    obj = { done: false, value: value };\n                }\n                else {\n                    obj.value = value;\n                }\n                return obj;\n            }\n            else if (lineNumber >= _this._lines.length) {\n                return FIN;\n            }\n            else {\n                lineText = _this._lines[lineNumber];\n                wordRanges = _this._wordenize(lineText, wordDefinition);\n                wordRangesIdx = 0;\n                lineNumber += 1;\n                return next();\n            }\n        };\n        return { next: next };\n    };\n    MirrorModel.prototype.getLineWords = function (lineNumber, wordDefinition) {\n        var content = this._lines[lineNumber - 1];\n        var ranges = this._wordenize(content, wordDefinition);\n        var words = [];\n        for (var _i = 0, ranges_1 = ranges; _i < ranges_1.length; _i++) {\n            var range = ranges_1[_i];\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    };\n    MirrorModel.prototype._wordenize = function (content, wordDefinition) {\n        var result = [];\n        var match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    };\n    MirrorModel.prototype.getValueInRange = function (range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        var lineEnding = this._eol;\n        var startLineIndex = range.startLineNumber - 1;\n        var endLineIndex = range.endLineNumber - 1;\n        var resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (var i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    };\n    MirrorModel.prototype.offsetAt = function (position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n    };\n    MirrorModel.prototype.positionAt = function (offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        var out = this._lineStarts.getIndexOf(offset);\n        var lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    };\n    MirrorModel.prototype._validateRange = function (range) {\n        var start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        var end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    };\n    MirrorModel.prototype._validatePosition = function (position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        var lineNumber = position.lineNumber, column = position.column;\n        var hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            var maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber: lineNumber, column: column };\n        }\n    };\n    return MirrorModel;\n}(BaseMirrorModel));\n/**\n * @internal\n */\nvar BaseEditorSimpleWorker = /** @class */ (function () {\n    function BaseEditorSimpleWorker(foreignModuleFactory) {\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n        var original = this._getModel(originalUrl);\n        var modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return Promise.resolve(null);\n        }\n        var originalLines = original.getLinesContent();\n        var modifiedLines = modified.getLinesContent();\n        var diffComputer = new DiffComputer(originalLines, modifiedLines, {\n            shouldComputeCharChanges: true,\n            shouldPostProcessCharChanges: true,\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n            shouldMakePrettyDiff: true\n        });\n        var changes = diffComputer.computeDiff();\n        var identical = (changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\n        return Promise.resolve({\n            identical: identical,\n            changes: changes\n        });\n    };\n    BaseEditorSimpleWorker.prototype._modelsAreIdentical = function (original, modified) {\n        var originalLineCount = original.getLineCount();\n        var modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (var line = 1; line <= originalLineCount; line++) {\n            var originalLine = original.getLineContent(line);\n            var modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    };\n    BaseEditorSimpleWorker.prototype.computeMoreMinimalEdits = function (modelUrl, edits) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(edits);\n        }\n        var result = [];\n        var lastEol = undefined;\n        edits = mergeSort(edits, function (a, b) {\n            if (a.range && b.range) {\n                return Range.compareRangesUsingStarts(a.range, b.range);\n            }\n            // eol only changes should go to the end\n            var aRng = a.range ? 0 : 1;\n            var bRng = b.range ? 0 : 1;\n            return aRng - bRng;\n        });\n        for (var _i = 0, edits_1 = edits; _i < edits_1.length; _i++) {\n            var _a = edits_1[_i], range = _a.range, text = _a.text, eol = _a.eol;\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (Range.isEmpty(range) && !text) {\n                // empty change\n                continue;\n            }\n            var original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                // noop\n                continue;\n            }\n            // make sure diff won't take too long\n            if (Math.max(text.length, original.length) > BaseEditorSimpleWorker._diffLimit) {\n                result.push({ range: range, text: text });\n                continue;\n            }\n            // compute diff between original and edit.text\n            var changes = stringDiff(original, text, false);\n            var editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n            for (var _b = 0, changes_1 = changes; _b < changes_1.length; _b++) {\n                var change = changes_1[_b];\n                var start = model.positionAt(editOffset + change.originalStart);\n                var end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                var newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n        }\n        return Promise.resolve(result);\n    };\n    // ---- END minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeLinks = function (modelUrl) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        return Promise.resolve(computeLinks(model));\n    };\n    BaseEditorSimpleWorker.prototype.textualSuggest = function (modelUrl, position, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        var suggestions = [];\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        var currentWord = model.getWordUntilPosition(position, wordDefRegExp);\n        var seen = Object.create(null);\n        seen[currentWord.word] = true;\n        for (var iter = model.createWordIterator(wordDefRegExp), e = iter.next(); !e.done && suggestions.length <= BaseEditorSimpleWorker._suggestionsLimit; e = iter.next()) {\n            var word = e.value;\n            if (seen[word]) {\n                continue;\n            }\n            seen[word] = true;\n            if (!isNaN(Number(word))) {\n                continue;\n            }\n            suggestions.push({\n                kind: 18 /* Text */,\n                label: word,\n                insertText: word,\n                range: { startLineNumber: position.lineNumber, startColumn: currentWord.startColumn, endLineNumber: position.lineNumber, endColumn: currentWord.endColumn }\n            });\n        }\n        return Promise.resolve({ suggestions: suggestions });\n    };\n    // ---- END suggest --------------------------------------------------------------------------\n    //#region -- word ranges --\n    BaseEditorSimpleWorker.prototype.computeWordRanges = function (modelUrl, range, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(Object.create(null));\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        var result = Object.create(null);\n        for (var line = range.startLineNumber; line < range.endLineNumber; line++) {\n            var words = model.getLineWords(line, wordDefRegExp);\n            for (var _i = 0, words_1 = words; _i < words_1.length; _i++) {\n                var word = words_1[_i];\n                if (!isNaN(Number(word.word))) {\n                    continue;\n                }\n                var array = result[word.word];\n                if (!array) {\n                    array = [];\n                    result[word.word] = array;\n                }\n                array.push({\n                    startLineNumber: line,\n                    startColumn: word.startColumn,\n                    endLineNumber: line,\n                    endColumn: word.endColumn\n                });\n            }\n        }\n        return Promise.resolve(result);\n    };\n    //#endregion\n    BaseEditorSimpleWorker.prototype.navigateValueSet = function (modelUrl, range, up, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        var selectionText = model.getValueInRange(range);\n        var wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        if (!wordRange) {\n            return Promise.resolve(null);\n        }\n        var word = model.getValueInRange(wordRange);\n        var result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return Promise.resolve(result);\n    };\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.loadForeignModule = function (moduleId, createData) {\n        var _this = this;\n        var ctx = {\n            getMirrorModels: function () {\n                return _this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            var methods = [];\n            for (var _i = 0, _a = getAllPropertyNames(this._foreignModule); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (typeof this._foreignModule[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return Promise.resolve(methods);\n        }\n        // ESM-comment-begin\n        // \t\treturn new Promise<any>((resolve, reject) => {\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n        // \n        // \t\t\t\tlet methods: string[] = [];\n        // \t\t\t\tfor (const prop of getAllPropertyNames(this._foreignModule)) {\n        // \t\t\t\t\tif (typeof this._foreignModule[prop] === 'function') {\n        // \t\t\t\t\t\tmethods.push(prop);\n        // \t\t\t\t\t}\n        // \t\t\t\t}\n        // \n        // \t\t\t\tresolve(methods);\n        // \n        // \t\t\t}, reject);\n        // \t\t});\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        return Promise.reject(new Error(\"Unexpected usage\"));\n        // ESM-uncomment-end\n    };\n    // foreign method request\n    BaseEditorSimpleWorker.prototype.fmr = function (method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    };\n    // ---- END diff --------------------------------------------------------------------------\n    // ---- BEGIN minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker._diffLimit = 10000;\n    // ---- BEGIN suggest --------------------------------------------------------------------------\n    BaseEditorSimpleWorker._suggestionsLimit = 10000;\n    return BaseEditorSimpleWorker;\n}());\nexport { BaseEditorSimpleWorker };\n/**\n * @internal\n */\nvar EditorSimpleWorkerImpl = /** @class */ (function (_super) {\n    __extends(EditorSimpleWorkerImpl, _super);\n    function EditorSimpleWorkerImpl(foreignModuleFactory) {\n        var _this = _super.call(this, foreignModuleFactory) || this;\n        _this._models = Object.create(null);\n        return _this;\n    }\n    EditorSimpleWorkerImpl.prototype.dispose = function () {\n        this._models = Object.create(null);\n    };\n    EditorSimpleWorkerImpl.prototype._getModel = function (uri) {\n        return this._models[uri];\n    };\n    EditorSimpleWorkerImpl.prototype._getModels = function () {\n        var _this = this;\n        var all = [];\n        Object.keys(this._models).forEach(function (key) { return all.push(_this._models[key]); });\n        return all;\n    };\n    EditorSimpleWorkerImpl.prototype.acceptNewModel = function (data) {\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptModelChanged = function (strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        var model = this._models[strURL];\n        model.onEvents(e);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptRemovedModel = function (strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    };\n    return EditorSimpleWorkerImpl;\n}(BaseEditorSimpleWorker));\nexport { EditorSimpleWorkerImpl };\n/**\n * Called on the worker side\n * @internal\n */\nexport function create() {\n    return new EditorSimpleWorkerImpl(null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    globals.monaco = createMonacoBaseAPI();\n}\n","/*!\nCopyright (c) 2014 Taylor Hakes\nCopyright (c) 2014 Forbes Lindesay\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\t\ttypeof define === 'function' && define.amd ? define(factory) :\n\t\t\t(factory());\n}(this, (function () {\n\t'use strict';\n\n\t/**\n\t * @this {Promise}\n\t */\n\tfunction finallyConstructor(callback) {\n\t\tvar constructor = this.constructor;\n\t\treturn this.then(\n\t\t\tfunction (value) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (reason) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn constructor.reject(reason);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\t// Store setTimeout reference so promise-polyfill will be unaffected by\n\t// other code modifying setTimeout (like sinon.useFakeTimers())\n\tvar setTimeoutFunc = setTimeout;\n\n\tfunction noop() { }\n\n\t// Polyfill for Function.prototype.bind\n\tfunction bind(fn, thisArg) {\n\t\treturn function () {\n\t\t\tfn.apply(thisArg, arguments);\n\t\t};\n\t}\n\n\t/**\n\t * @constructor\n\t * @param {Function} fn\n\t */\n\tfunction Promise(fn) {\n\t\tif (!(this instanceof Promise))\n\t\t\tthrow new TypeError('Promises must be constructed via new');\n\t\tif (typeof fn !== 'function') throw new TypeError('not a function');\n\t\t/** @type {!number} */\n\t\tthis._state = 0;\n\t\t/** @type {!boolean} */\n\t\tthis._handled = false;\n\t\t/** @type {Promise|undefined} */\n\t\tthis._value = undefined;\n\t\t/** @type {!Array<!Function>} */\n\t\tthis._deferreds = [];\n\n\t\tdoResolve(fn, this);\n\t}\n\n\tfunction handle(self, deferred) {\n\t\twhile (self._state === 3) {\n\t\t\tself = self._value;\n\t\t}\n\t\tif (self._state === 0) {\n\t\t\tself._deferreds.push(deferred);\n\t\t\treturn;\n\t\t}\n\t\tself._handled = true;\n\t\tPromise._immediateFn(function () {\n\t\t\tvar cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t\t\tif (cb === null) {\n\t\t\t\t(self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar ret;\n\t\t\ttry {\n\t\t\t\tret = cb(self._value);\n\t\t\t} catch (e) {\n\t\t\t\treject(deferred.promise, e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolve(deferred.promise, ret);\n\t\t});\n\t}\n\n\tfunction resolve(self, newValue) {\n\t\ttry {\n\t\t\t// Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t\t\tif (newValue === self)\n\t\t\t\tthrow new TypeError('A promise cannot be resolved with itself.');\n\t\t\tif (\n\t\t\t\tnewValue &&\n\t\t\t\t(typeof newValue === 'object' || typeof newValue === 'function')\n\t\t\t) {\n\t\t\t\tvar then = newValue.then;\n\t\t\t\tif (newValue instanceof Promise) {\n\t\t\t\t\tself._state = 3;\n\t\t\t\t\tself._value = newValue;\n\t\t\t\t\tfinale(self);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (typeof then === 'function') {\n\t\t\t\t\tdoResolve(bind(then, newValue), self);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tself._state = 1;\n\t\t\tself._value = newValue;\n\t\t\tfinale(self);\n\t\t} catch (e) {\n\t\t\treject(self, e);\n\t\t}\n\t}\n\n\tfunction reject(self, newValue) {\n\t\tself._state = 2;\n\t\tself._value = newValue;\n\t\tfinale(self);\n\t}\n\n\tfunction finale(self) {\n\t\tif (self._state === 2 && self._deferreds.length === 0) {\n\t\t\tPromise._immediateFn(function () {\n\t\t\t\tif (!self._handled) {\n\t\t\t\t\tPromise._unhandledRejectionFn(self._value);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfor (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t\t\thandle(self, self._deferreds[i]);\n\t\t}\n\t\tself._deferreds = null;\n\t}\n\n\t/**\n\t * @constructor\n\t */\n\tfunction Handler(onFulfilled, onRejected, promise) {\n\t\tthis.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t\tthis.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t\tthis.promise = promise;\n\t}\n\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, self) {\n\t\tvar done = false;\n\t\ttry {\n\t\t\tfn(\n\t\t\t\tfunction (value) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(self, value);\n\t\t\t\t},\n\t\t\t\tfunction (reason) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\treject(self, reason);\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (ex) {\n\t\t\tif (done) return;\n\t\t\tdone = true;\n\t\t\treject(self, ex);\n\t\t}\n\t}\n\n\tPromise.prototype['catch'] = function (onRejected) {\n\t\treturn this.then(null, onRejected);\n\t};\n\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t\t// @ts-ignore\n\t\tvar prom = new this.constructor(noop);\n\n\t\thandle(this, new Handler(onFulfilled, onRejected, prom));\n\t\treturn prom;\n\t};\n\n\tPromise.prototype['finally'] = finallyConstructor;\n\n\tPromise.all = function (arr) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (!arr || typeof arr.length === 'undefined')\n\t\t\t\tthrow new TypeError('Promise.all accepts an array');\n\t\t\tvar args = Array.prototype.slice.call(arr);\n\t\t\tif (args.length === 0) return resolve([]);\n\t\t\tvar remaining = args.length;\n\n\t\t\tfunction res(i, val) {\n\t\t\t\ttry {\n\t\t\t\t\tif (val && (typeof val === 'object' || typeof val === 'function')) {\n\t\t\t\t\t\tvar then = val.then;\n\t\t\t\t\t\tif (typeof then === 'function') {\n\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\tval,\n\t\t\t\t\t\t\t\tfunction (val) {\n\t\t\t\t\t\t\t\t\tres(i, val);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\treject\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\targs[i] = val;\n\t\t\t\t\tif (--remaining === 0) {\n\t\t\t\t\t\tresolve(args);\n\t\t\t\t\t}\n\t\t\t\t} catch (ex) {\n\t\t\t\t\treject(ex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tres(i, args[i]);\n\t\t\t}\n\t\t});\n\t};\n\n\tPromise.resolve = function (value) {\n\t\tif (value && typeof value === 'object' && value.constructor === Promise) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn new Promise(function (resolve) {\n\t\t\tresolve(value);\n\t\t});\n\t};\n\n\tPromise.reject = function (value) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\treject(value);\n\t\t});\n\t};\n\n\tPromise.race = function (values) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfor (var i = 0, len = values.length; i < len; i++) {\n\t\t\t\tvalues[i].then(resolve, reject);\n\t\t\t}\n\t\t});\n\t};\n\n\t// Use polyfill for setImmediate for performance gains\n\tPromise._immediateFn =\n\t\t(typeof setImmediate === 'function' &&\n\t\t\tfunction (fn) {\n\t\t\t\tsetImmediate(fn);\n\t\t\t}) ||\n\t\tfunction (fn) {\n\t\t\tsetTimeoutFunc(fn, 0);\n\t\t};\n\n\tPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n\t\tif (typeof console !== 'undefined' && console) {\n\t\t\tconsole.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t\t}\n\t};\n\n\t/** @suppress {undefinedVars} */\n\tvar globalNS = (function () {\n\t\t// the only reliable means to get the global object is\n\t\t// `Function('return this')()`\n\t\t// However, this causes CSP violations in Chrome apps.\n\t\tif (typeof self !== 'undefined') {\n\t\t\treturn self;\n\t\t}\n\t\tif (typeof window !== 'undefined') {\n\t\t\treturn window;\n\t\t}\n\t\tif (typeof global !== 'undefined') {\n\t\t\treturn global;\n\t\t}\n\t\tthrow new Error('unable to locate global object');\n\t})();\n\n\tif (!('Promise' in globalNS)) {\n\t\tglobalNS['Promise'] = Promise;\n\t} else if (!globalNS.Promise.prototype['finally']) {\n\t\tglobalNS.Promise.prototype['finally'] = finallyConstructor;\n\t}\n\n})));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './promise-polyfill/polyfill.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../core/token.js';\nimport * as standaloneEnums from './standaloneEnums.js';\nvar KeyMod = /** @class */ (function () {\n    function KeyMod() {\n    }\n    KeyMod.chord = function (firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    };\n    KeyMod.CtrlCmd = 2048 /* CtrlCmd */;\n    KeyMod.Shift = 1024 /* Shift */;\n    KeyMod.Alt = 512 /* Alt */;\n    KeyMod.WinCtrl = 256 /* WinCtrl */;\n    return KeyMod;\n}());\nexport { KeyMod };\nexport function createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: standaloneEnums.KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: standaloneEnums.SelectionDirection,\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\n        MarkerTag: standaloneEnums.MarkerTag,\n        Uri: URI,\n        Token: Token\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\nexport var MarkerTag;\n(function (MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n})(MarkerTag || (MarkerTag = {}));\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport var KeyCode;\n(function (KeyCode) {\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\n    KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\n    KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\n    KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\n    KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\n    KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\n    KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\n    KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\n    KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\n    KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\n    KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\n    KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\n    KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\n    KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\n    KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\n    KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\n    KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\n    KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\n    KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\n    KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\n    KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\n    KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\n    KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\n    KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\n    KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\n    KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\n    KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\n    KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\n    KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\n    KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\n    KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\n    KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\n    KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\n    KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\n    KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\n    KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\n    KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\n    KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\n    KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\n    KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\n    KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\n    KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\n    KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\n    KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\n    KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\n    KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\n    KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\n    KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\n    KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\n    KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\n/**\n * The direction of a selection.\n */\nexport var SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\nexport var ScrollbarVisibility;\n(function (ScrollbarVisibility) {\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLinePreference;\n(function (EndOfLinePreference) {\n    /**\n     * Use the end of line character identified in the text buffer.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\n/**\n * The default end of line to use when instantiating models.\n */\nexport var DefaultEndOfLine;\n(function (DefaultEndOfLine) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLineSequence;\n(function (EndOfLineSequence) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport var TrackedRangeStickiness;\n(function (TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\nexport var ScrollType;\n(function (ScrollType) {\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {}));\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport var CursorChangeReason;\n(function (CursorChangeReason) {\n    /**\n     * Unknown or not set.\n     */\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n    /**\n     * A `model.setValue()` was called.\n     */\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n    /**\n     * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n     */\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n    /**\n     * There was an explicit user gesture.\n     */\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n    /**\n     * There was a Paste.\n     */\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n    /**\n     * There was an Undo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n    /**\n     * There was a Redo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {}));\nexport var RenderMinimap;\n(function (RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Small\"] = 1] = \"Small\";\n    RenderMinimap[RenderMinimap[\"Large\"] = 2] = \"Large\";\n    RenderMinimap[RenderMinimap[\"SmallBlocks\"] = 3] = \"SmallBlocks\";\n    RenderMinimap[RenderMinimap[\"LargeBlocks\"] = 4] = \"LargeBlocks\";\n})(RenderMinimap || (RenderMinimap = {}));\n/**\n * Describes how to indent wrapped lines.\n */\nexport var WrappingIndent;\n(function (WrappingIndent) {\n    /**\n     * No indentation => wrapped lines begin at column 1.\n     */\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    /**\n     * Same => wrapped lines get the same indentation as the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    /**\n     * Indent => wrapped lines get +1 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    /**\n     * DeepIndent => wrapped lines get +2 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {}));\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorBlinkingStyle;\n(function (TextEditorCursorBlinkingStyle) {\n    /**\n     * Hidden\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    /**\n     * Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    /**\n     * Blinking with smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    /**\n     * Blinking with prolonged filled state and smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    /**\n     * Expand collapse animation on the y axis\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    /**\n     * No-Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    /**\n     * As a vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    /**\n     * As a block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    /**\n     * As a horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    /**\n     * As a thin vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    /**\n     * As an outlined block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    /**\n     * As a thin horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\nexport var RenderLineNumbersType;\n(function (RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\n/**\n * A positioning preference for rendering content widgets.\n */\nexport var ContentWidgetPositionPreference;\n(function (ContentWidgetPositionPreference) {\n    /**\n     * Place the content widget exactly at a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n    /**\n     * Place the content widget above a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n    /**\n     * Place the content widget below a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport var OverlayWidgetPositionPreference;\n(function (OverlayWidgetPositionPreference) {\n    /**\n     * Position the overlay widget in the top right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the bottom right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the top center\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport var MouseTargetType;\n(function (MouseTargetType) {\n    /**\n     * Mouse is on top of an unknown element.\n     */\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * Mouse is on top of the textarea used for input.\n     */\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n    /**\n     * Mouse is on top of the glyph margin\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n    /**\n     * Mouse is on top of the line numbers\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n    /**\n     * Mouse is on top of the line decorations\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n    /**\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n    /**\n     * Mouse is on top of text in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n    /**\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n    /**\n     * Mouse is on top of a view zone in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n    /**\n     * Mouse is on top of a content widget.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n    /**\n     * Mouse is on top of the decorations overview ruler.\n     */\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n    /**\n     * Mouse is on top of a scrollbar.\n     */\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n    /**\n     * Mouse is on top of an overlay widget.\n     */\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    /**\n     * Mouse is outside of the editor.\n     */\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {}));\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 25] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\nexport var CompletionItemInsertTextRule;\n(function (CompletionItemInsertTextRule) {\n    /**\n     * Adjust whitespace/indentation of multiline insert texts to\n     * match the current line indentation.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    /**\n     * `insertText` is a snippet.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\n/**\n * How a suggest provider was triggered.\n */\nexport var CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\nexport var SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint32 } from '../core/uint.js';\nvar PrefixSumIndexOfResult = /** @class */ (function () {\n    function PrefixSumIndexOfResult(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n    }\n    return PrefixSumIndexOfResult;\n}());\nexport { PrefixSumIndexOfResult };\nvar PrefixSumComputer = /** @class */ (function () {\n    function PrefixSumComputer(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    PrefixSumComputer.prototype.getCount = function () {\n        return this.values.length;\n    };\n    PrefixSumComputer.prototype.insertValues = function (insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        var insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.changeValue = function (index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\n        startIndex = toUint32(startIndex);\n        cnt = toUint32(cnt);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        var maxCnt = oldValues.length - startIndex;\n        if (cnt >= maxCnt) {\n            cnt = maxCnt;\n        }\n        if (cnt === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - cnt);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.getTotalValue = function () {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getAccumulatedValue(this.values.length - 1);\n    };\n    PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getAccumulatedValue(index);\n    };\n    PrefixSumComputer.prototype._getAccumulatedValue = function (index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        var startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (var i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    };\n    PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalValue();\n        var low = 0;\n        var high = this.values.length - 1;\n        var mid = 0;\n        var midStop = 0;\n        var midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (accumulatedValue < midStart) {\n                high = mid - 1;\n            }\n            else if (accumulatedValue >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n    };\n    return PrefixSumComputer;\n}());\nexport { PrefixSumComputer };\nvar PrefixSumComputerWithCache = /** @class */ (function () {\n    function PrefixSumComputerWithCache(values) {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n        this._actual = new PrefixSumComputer(values);\n        this._bustCache();\n    }\n    PrefixSumComputerWithCache.prototype._bustCache = function () {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n    };\n    PrefixSumComputerWithCache.prototype.insertValues = function (insertIndex, insertValues) {\n        if (this._actual.insertValues(insertIndex, insertValues)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.changeValue = function (index, value) {\n        if (this._actual.changeValue(index, value)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.removeValues = function (startIndex, cnt) {\n        if (this._actual.removeValues(startIndex, cnt)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.getTotalValue = function () {\n        return this._actual.getTotalValue();\n    };\n    PrefixSumComputerWithCache.prototype.getAccumulatedValue = function (index) {\n        return this._actual.getAccumulatedValue(index);\n    };\n    PrefixSumComputerWithCache.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        if (this._cache !== null) {\n            var cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\n            if (cacheIndex >= 0 && cacheIndex < this._cache.length) {\n                // Cache hit!\n                return this._cache[cacheIndex];\n            }\n        }\n        // Cache miss!\n        return this._actual.getIndexOf(accumulatedValue);\n    };\n    /**\n     * Gives a hint that a lot of requests are about to come in for these accumulated values.\n     */\n    PrefixSumComputerWithCache.prototype.warmUpCache = function (accumulatedValueStart, accumulatedValueEnd) {\n        var newCache = [];\n        for (var accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\n            newCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\n        }\n        this._cache = newCache;\n        this._cacheAccumulatedValueStart = accumulatedValueStart;\n    };\n    return PrefixSumComputerWithCache;\n}());\nexport { PrefixSumComputerWithCache };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorkerImpl } from './common/services/editorSimpleWorker.js';\nvar initialized = false;\nexport function initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var editorWorker = new EditorSimpleWorkerImpl(foreignModule);\n    var simpleWorker = new SimpleWorkerServer(function (msg) {\n        self.postMessage(msg);\n    }, editorWorker);\n    self.onmessage = function (e) {\n        simpleWorker.onmessage(e.data);\n    };\n}\nself.onmessage = function (e) {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n"],"sourceRoot":""}